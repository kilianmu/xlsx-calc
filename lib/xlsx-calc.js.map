{"version":3,"file":"xlsx-calc.js","mappings":"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","sources":["webpack://xlsx-calc/webpack/universalModuleDefinition","webpack://xlsx-calc/./src/Calculator.js","webpack://xlsx-calc/./src/Exp.js","webpack://xlsx-calc/./src/LazyValue.js","webpack://xlsx-calc/./src/Range.js","webpack://xlsx-calc/./src/RawValue.js","webpack://xlsx-calc/./src/RefValue.js","webpack://xlsx-calc/./src/UserFnExecutor.js","webpack://xlsx-calc/./src/UserRawFnExecutor.js","webpack://xlsx-calc/./src/col_str_2_int.js","webpack://xlsx-calc/./src/exec_formula.js","webpack://xlsx-calc/./src/expression_builder.js","webpack://xlsx-calc/./src/find_all_cells_with_formulas.js","webpack://xlsx-calc/./src/formulas-raw.js","webpack://xlsx-calc/./src/formulas.js","webpack://xlsx-calc/./src/getSanitizedSheetName.js","webpack://xlsx-calc/./src/index.js","webpack://xlsx-calc/./src/int_2_col_str.js","webpack://xlsx-calc/./src/str_2_val.js","webpack://xlsx-calc/webpack/bootstrap","webpack://xlsx-calc/webpack/startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, () => {\nreturn ","\"use strict\";\r\n\r\nconst RawValue = require('./RawValue.js');\r\nconst str_2_val = require('./str_2_val.js');\r\nconst find_all_cells_with_formulas = require('./find_all_cells_with_formulas.js');\r\n\r\nclass Calculator {\r\n    \r\n    constructor(workbook, exec_formula) {\r\n        this.workbook = workbook;\r\n        this.expressions = [];\r\n        this.exec_formula = exec_formula;\r\n        this.variables = {};\r\n        this.formulas = find_all_cells_with_formulas(workbook, exec_formula);\r\n        for (let i = this.formulas.length - 1; i >= 0; i--) {\r\n            let exp = exec_formula.build_expression(this.formulas[i]);\r\n\r\n            this.expressions.push(exp);\r\n        }\r\n        console.log(this.expressions);\r\n        this.calcNames();\r\n    }\r\n    \r\n    setVar(var_name, value) {\r\n        let variable = this.variables[var_name];\r\n        if (variable) {\r\n            variable.setValue(value);\r\n        } else {\r\n            this.expressions.forEach(exp => {\r\n                this.setVarOfExpression(exp, var_name, value);\r\n            });\r\n        }\r\n    }\r\n    \r\n    getVars() {\r\n        let vars = {};\r\n        for (let k in this.variables) {\r\n            vars[k] = this.variables[k].calc();\r\n        }\r\n        return vars;\r\n    }\r\n    \r\n    calcNames() {\r\n        if (!this.workbook || !this.workbook.Workbook || !this.workbook.Workbook.Names) {\r\n            return;\r\n        }\r\n        this.workbook.Workbook.Names.forEach(item => {\r\n            let val = this.getRef(item.Ref);\r\n            this.variables[item.Name] = val;\r\n            this.expressions.forEach(exp => {\r\n                this.setVarOfExpression(exp, item.Name);\r\n            });\r\n        });\r\n    }\r\n    \r\n    getRef(ref_name) {\r\n        if (!this.formulas.length) {\r\n            throw new Error(\"No formula found.\");\r\n        }\r\n        let first_formula = this.formulas[0];\r\n        let formula_ref = first_formula.formula_ref;\r\n        let formula = {\r\n            formula_ref: formula_ref,\r\n            wb: this.workbook,\r\n            exec_formula: this.exec_formula\r\n        };\r\n        return str_2_val(ref_name, formula);\r\n    }\r\n    \r\n    setVarOfExpression(exp, var_name, value) {\r\n        for (let i = 0; i < exp.args.length; i++) {\r\n            let arg = exp.args[i];\r\n            if (arg === var_name) {\r\n                exp.args[i] = this.variables[var_name] || (this.variables[var_name] = new RawValue(value));\r\n            } else if (typeof arg === 'object' && (arg.name === 'Expression' || arg.name === 'UserFn')) {\r\n                this.setVarOfExpression(arg, var_name, value);\r\n            }\r\n        }\r\n    }\r\n    \r\n    execute() {\r\n        this.expressions.forEach(exp => {\r\n            exp.update_cell_value();\r\n        });\r\n    }\r\n}\r\n\r\nmodule.exports = Calculator;","\"use strict\";\r\n\r\nconst RawValue = require('./RawValue.js');\r\nconst Range = require('./Range.js');\r\nconst str_2_val = require('./str_2_val.js');\r\n\r\nconst MS_PER_DAY = 24 * 60 * 60 * 1000;\r\n\r\nvar exp_id = 0;\r\n\r\nmodule.exports = function Exp(formula) {\r\n    var self = this;\r\n    self.id = ++exp_id;\r\n    self.args = [];\r\n    self.name = 'Expression';\r\n    self.update_cell_value = update_cell_value;\r\n    self.formula = formula;\r\n    \r\n    function update_cell_value() {\r\n        try {\r\n            if (Array.isArray(self.args) \r\n                    && self.args.length === 1\r\n                    && self.args[0] instanceof Range) {\r\n                throw Error('#VALUE!');\r\n            }\r\n            formula.cell.v = self.calc();\r\n            if (typeof(formula.cell.v) === 'string') {\r\n                formula.cell.t = 's';\r\n            }\r\n            else if (typeof(formula.cell.v) === 'number') {\r\n                formula.cell.t = 'n';\r\n            }\r\n        }\r\n        catch (e) {\r\n            var errorValues = {\r\n                '#NULL!': 0x00,\r\n                '#DIV/0!': 0x07,\r\n                '#VALUE!': 0x0F,\r\n                '#REF!': 0x17,\r\n                '#NAME?': 0x1D,\r\n                '#NUM!': 0x24,\r\n                '#N/A': 0x2A,\r\n                '#GETTING_DATA': 0x2B\r\n            };\r\n            if (errorValues[e.message] !== undefined) {\r\n                formula.cell.t = 'e';\r\n                formula.cell.w = e.message;\r\n                formula.cell.v = errorValues[e.message];\r\n            }\r\n            else {\r\n                throw e;\r\n            }\r\n        }\r\n        finally {\r\n            formula.status = 'done';\r\n        }\r\n    }\r\n    function isEmpty(value) {\r\n        return value === undefined || value === null || value === \"\";\r\n    }\r\n    \r\n    function checkVariable(obj) {\r\n        if (typeof obj.calc !== 'function') {\r\n            throw new Error('Undefined ' + obj);\r\n        }\r\n    }\r\n\r\n    function getCurrentCellIndex() {\r\n        return +self.formula.name.replace(/[^0-9]/g, '');\r\n    }\r\n    \r\n    function exec(op, args, fn) {\r\n        for (var i = 0; i < args.length; i++) {\r\n            if (args[i] === op) {\r\n                try {\r\n                    if (i===0 && op==='+') {\r\n                        checkVariable(args[i + 1]);\r\n                        let r = args[i + 1].calc();\r\n                        args.splice(i, 2, new RawValue(r));\r\n                    } else {\r\n                        checkVariable(args[i - 1]);\r\n                        checkVariable(args[i + 1]);\r\n\r\n                        let a = args[i - 1].calc();\r\n                        let b = args[i + 1].calc();\r\n                        if (Array.isArray(a)) {\r\n                            a = a[getCurrentCellIndex() - 1][0];\r\n                        }\r\n                        if (Array.isArray(b)) {\r\n                            b = b[getCurrentCellIndex() - 1][0];\r\n                        }\r\n\r\n                        let r = fn(a, b);\r\n                        args.splice(i - 1, 3, new RawValue(r));\r\n                        i--;\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    // console.log('[Exp.js] - ' + formula.name + ': evaluating ' + formula.cell.f + '\\n' + e.message);\r\n                    throw e;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    function exec_minus(args) {\r\n        for (var i = args.length; i--;) {\r\n            if (args[i] === '-') {\r\n                checkVariable(args[i + 1]);\r\n                var b = args[i + 1].calc();\r\n                if (i > 0 && typeof args[i - 1] !== 'string') {\r\n                    args.splice(i, 1, '+');\r\n                    if (b instanceof Date) {\r\n                        b = Date.parse(b);\r\n                        checkVariable(args[i - 1]);\r\n                        var a = args[i - 1].calc();\r\n                        if (a instanceof Date) {\r\n                            a = Date.parse(a) / MS_PER_DAY;\r\n                            b = b / MS_PER_DAY;\r\n                            args.splice(i - 1, 1, new RawValue(a));\r\n                        }\r\n                    }\r\n                    args.splice(i + 1, 1, new RawValue(-b));\r\n                }\r\n                else {\r\n                    if (typeof b === 'string') {\r\n                        throw new Error('#VALUE!');\r\n                    }\r\n                    args.splice(i, 2, new RawValue(-b));\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    self.calc = function() {\r\n        let args = self.args.concat();\r\n        exec_minus(args);\r\n        exec('^', args, function(a, b) {\r\n            return Math.pow(+a, +b);\r\n        });\r\n        exec('/', args, function(a, b) {\r\n            if (b == 0) {\r\n                throw Error('#DIV/0!');\r\n            }\r\n            return (+a) / (+b);\r\n        });\r\n        exec('*', args, function(a, b) {\r\n            return (+a) * (+b);\r\n        });\r\n        exec('+', args, function(a, b) {\r\n            if (a instanceof Date && typeof b === 'number') {\r\n                b = b * MS_PER_DAY;\r\n            }\r\n            return (+a) + (+b);\r\n        });\r\n        exec('&', args, function(a, b) {\r\n            return '' + a + b;\r\n        });\r\n        exec('<', args, function(a, b) {\r\n            return a < b;\r\n        });\r\n        exec('>', args, function(a, b) {\r\n            return a > b;\r\n        });\r\n        exec('>=', args, function(a, b) {\r\n            return a >= b;\r\n        });\r\n        exec('<=', args, function(a, b) {\r\n            return a <= b;\r\n        });\r\n        exec('<>', args, function(a, b) {\r\n            if (a instanceof Date && b instanceof Date) {\r\n                return a.getTime() !== b.getTime();\r\n            }\r\n            if (isEmpty(a) && isEmpty(b)) {\r\n                return false;\r\n            }\r\n            return a !== b;\r\n        });\r\n        exec('=', args, function(a, b) {\r\n            if (a instanceof Date && b instanceof Date) {\r\n                return a.getTime() === b.getTime();\r\n            }\r\n            if (isEmpty(a) && isEmpty(b)) {\r\n                return true;\r\n            }\r\n            if ((a == null && b === 0) || (a === 0 && b == null)) {\r\n                return true;\r\n            }\r\n            if (typeof a === 'string' && typeof b === 'string' && a.toLowerCase() === b.toLowerCase()) {\r\n                return true;\r\n            }\r\n            return a == b;\r\n        });\r\n        if (args.length == 1) {\r\n            if (typeof(args[0].calc) !== 'function') {\r\n                return args[0];\r\n            }\r\n            else {\r\n                return args[0].calc();\r\n            }\r\n        }\r\n    };\r\n\r\n    var last_arg;\r\n    self.push = function(buffer) {\r\n        if (buffer) {\r\n            var v = str_2_val(buffer, formula);\r\n            if (((v === '=') && (last_arg == '>' || last_arg == '<')) || (last_arg == '<' && v === '>')) {\r\n                self.args[self.args.length - 1] += v;\r\n            }\r\n            else {\r\n                self.args.push(v);\r\n            }\r\n            last_arg = v;\r\n            //console.log(self.id, '-->', v);\r\n        }\r\n    };\r\n};","\"use strict\";\r\n\r\nmodule.exports = function LazyValue(fn) {\r\n    this.calc = function() {\r\n        return fn();\r\n    };\r\n};\r\n","\"use strict\";\r\n\r\nconst col_str_2_int = require('./col_str_2_int.js');\r\nconst int_2_col_str = require('./int_2_col_str.js');\r\nconst getSanitizedSheetName = require('./getSanitizedSheetName.js');\r\n\r\nmodule.exports = function Range(str_expression, formula) {\r\n    this.calc = function() {\r\n        var range_expression, sheet_name, sheet;\r\n        if (str_expression.indexOf('!') != -1) {\r\n            var aux = str_expression.split('!');\r\n            sheet_name = getSanitizedSheetName(aux[0]);\r\n            range_expression = aux[1];\r\n        }\r\n        else {\r\n            sheet_name = formula.sheet_name;\r\n            range_expression = str_expression;\r\n        }\r\n        sheet = formula.wb.Sheets[sheet_name];\r\n        var arr = range_expression.split(':');\r\n        var min_row = parseInt(arr[0].replace(/^[A-Z]+/, ''), 10) || 0;\r\n        var str_max_row = arr[1].replace(/^[A-Z]+/, '');\r\n        var max_row;\r\n        if (str_max_row === '' && sheet['!ref']) {\r\n            str_max_row = sheet['!ref'].split(':')[1].replace(/^[A-Z]+/, '');\r\n        }\r\n        // the max is 1048576, but TLE\r\n        max_row = parseInt(str_max_row == '' ? '500000' : str_max_row, 10);\r\n        var min_col = col_str_2_int(arr[0]);\r\n        var max_col = col_str_2_int(arr[1]);\r\n        var matrix = [];\r\n        for (var i = min_row; i <= max_row; i++) {\r\n            var row = [];\r\n            matrix.push(row);\r\n            for (var j = min_col; j <= max_col; j++) {\r\n                var cell_name = int_2_col_str(j) + i;\r\n                var cell_full_name = sheet_name + '!' + cell_name;\r\n                var formula_ref = formula.formula_ref[cell_full_name];\r\n                if (formula_ref) {\r\n                    if (formula_ref.status === 'new') {\r\n                        formula.exec_formula(formula_ref);\r\n                    } else if (formula_ref.status === 'working') {\r\n                        if (formula_ref.cell.f.includes(formula.name)) {\r\n                            throw new Error('Circular ref');\r\n                        }\r\n                        formula.exec_formula(formula_ref);\r\n                    }\r\n                    if (sheet[cell_name].t === 'e') {\r\n                        row.push(sheet[cell_name]);\r\n                    }\r\n                    else {\r\n                        row.push(sheet[cell_name].v);\r\n                    }\r\n                }\r\n                else if (sheet[cell_name]) {\r\n                    if (sheet[cell_name].t === 'e') {\r\n                        row.push(sheet[cell_name]);\r\n                    }\r\n                    else {\r\n                        row.push(sheet[cell_name].v);\r\n                    }\r\n                }\r\n                else {\r\n                    row.push(null);\r\n                }\r\n            }\r\n        }\r\n        return matrix;\r\n    };\r\n};\r\n","\"use strict\";\r\n\r\nmodule.exports = function RawValue(value) {\r\n    this.setValue = function(v) {\r\n        value = v;\r\n    };\r\n    this.calc = function() {\r\n        return value;\r\n    };\r\n};\r\n","\"use strict\";\r\n\r\nconst getSanitizedSheetName = require('./getSanitizedSheetName.js');\r\n\r\nmodule.exports = function RefValue(str_expression, formula) {\r\n    var self = this;\r\n    this.name = 'RefValue';\r\n    this.str_expression = str_expression;\r\n    this.formula = formula;\r\n\r\n    self.parseRef = function() {\r\n        var sheet, sheet_name, cell_name, cell_full_name;\r\n        if (str_expression.indexOf('!') != -1) {\r\n            var aux = str_expression.split('!');\r\n            sheet_name = getSanitizedSheetName(aux[0]);\r\n            sheet = formula.wb.Sheets[sheet_name];\r\n            cell_name = aux[1];\r\n        }\r\n        else {\r\n            sheet = formula.sheet;\r\n            sheet_name = formula.sheet_name;\r\n            cell_name = str_expression;\r\n        }\r\n        if (!sheet) {\r\n            throw Error(\"Sheet \" + sheet_name + \" not found.\");\r\n        }\r\n        cell_full_name = sheet_name + '!' + cell_name;\r\n        return {\r\n            sheet: sheet,\r\n            sheet_name: sheet_name,\r\n            cell_name: cell_name,\r\n            cell_full_name: cell_full_name\r\n        };\r\n    };\r\n\r\n    this.calc = function() {\r\n        var resolved_ref = self.parseRef();\r\n        var sheet = resolved_ref.sheet;\r\n        var cell_name = resolved_ref.cell_name;\r\n        var cell_full_name = resolved_ref.cell_full_name;\r\n        var ref_cell = sheet[cell_name];\r\n        if (!ref_cell) {\r\n            return null;\r\n        }\r\n        var formula_ref = formula.formula_ref[cell_full_name];\r\n        if (formula_ref) {\r\n            if (formula_ref.status === 'new') {\r\n                formula.exec_formula(formula_ref);\r\n                if (ref_cell.t === 'e') {\r\n                    console.log('ref is an error with new formula', cell_full_name, ref_cell.w);\r\n                    throw new Error(ref_cell.w);\r\n                }\r\n                return ref_cell.v;\r\n            }\r\n            else if (formula_ref.status === 'working') {\r\n                if (ref_cell.f.includes(formula.name)) {\r\n                    throw new Error('Circular ref');\r\n                }\r\n                formula.exec_formula(formula_ref);\r\n                return this.calc();\r\n            }\r\n            else if (formula_ref.status === 'done') {\r\n                if (ref_cell.t === 'e') {\r\n                    console.log('ref is an error after formula eval', cell_full_name, ref_cell.w);\r\n                    throw new Error(ref_cell.w);\r\n                }\r\n                return ref_cell.v;\r\n            }\r\n        }\r\n        else {\r\n            if (ref_cell.t === 'e') {\r\n                console.log('ref is an error with no formula', cell_name);\r\n                throw new Error(ref_cell.w);\r\n            }\r\n            return ref_cell.v;\r\n        }\r\n    };\r\n};\r\n","\"use strict\";\r\n\r\nmodule.exports = function UserFnExecutor(user_function) {\r\n    var self = this;\r\n    self.name = 'UserFn';\r\n    self.args = [];\r\n    self.calc = function() {\r\n        var errorValues = {\r\n            '#NULL!': 0x00,\r\n            '#DIV/0!': 0x07,\r\n            '#VALUE!': 0x0F,\r\n            '#REF!': 0x17,\r\n            '#NAME?': 0x1D,\r\n            '#NUM!': 0x24,\r\n            '#N/A': 0x2A,\r\n            '#GETTING_DATA': 0x2B\r\n        }, result;\r\n        try {\r\n            result = user_function.apply(self, self.args.map(f=>f.calc()));\r\n        } catch (e) {\r\n            if (user_function.name === 'is_blank'\r\n                && errorValues[e.message] !== undefined) {\r\n                // is_blank applied to an error cell doesn't propagate the error\r\n                result = 0;\r\n            }\r\n            else if (user_function.name === 'iserror'\r\n                && errorValues[e.message] !== undefined) {\r\n                // iserror applied to an error doesn't propagate the error and returns true\r\n                result = true;\r\n            }\r\n            else {\r\n                throw e;\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n    self.push = function(buffer) {\r\n        self.args.push(buffer);\r\n    };\r\n};","\"use strict\";\r\n\r\nmodule.exports = function UserRawFnExecutor(user_function, formula) {\r\n    var self = this;\r\n    self.name = 'UserRawFn';\r\n    self.args = [];\r\n    self.calc = function() {\r\n        try {\r\n            return user_function.apply(self, self.args);\r\n        } catch(e) {\r\n            // debug\r\n            // console.log('----------------', user_function);\r\n            // console.log(formula.name);\r\n            // console.log(self);\r\n            throw e;\r\n        }\r\n    };\r\n    self.push = function(buffer) {\r\n        self.args.push(buffer);\r\n    };\r\n};\r\n","\"use strict\";\r\n\r\nmodule.exports = function col_str_2_int(col_str) {\r\n    var r = 0;\r\n    var colstr = col_str.replace(/[0-9]+$/, '');\r\n    for (var i = colstr.length; i--;) {\r\n        r += Math.pow(26, colstr.length - i - 1) * (colstr.charCodeAt(i) - 64);\r\n    }\r\n    return r - 1;\r\n};","\"use strict\";\r\n\r\nconst expression_builder = require('./expression_builder.js');\r\n\r\nlet xlsx_Fx = {};\r\nlet xlsx_raw_Fx = {};\r\n\r\nimport_functions(require('./formulas.js'));\r\nimport_raw_functions(require('./formulas-raw.js'));\r\n\r\nfunction import_raw_functions(functions, opts) {\r\n    for (var key in functions) {\r\n        xlsx_raw_Fx[key] = functions[key];\r\n    }\r\n}\r\n\r\nfunction import_functions(formulajs, opts) {\r\n\r\n    opts = opts || {};\r\n    var prefix = opts.prefix || '';\r\n    for (var key in formulajs) {\r\n        var obj = formulajs[key];\r\n        if (typeof(obj) === 'function') {\r\n            if (opts.override || !xlsx_Fx[prefix + key]) {\r\n                xlsx_Fx[prefix + key] = obj;\r\n            }\r\n            // else {\r\n            //     console.log(prefix + key, 'already exists.');\r\n            //     console.log('  to override:');\r\n            //     console.log('    XLSX_CALC.import_functions(yourlib, {override: true})');\r\n            // }\r\n        }\r\n        else if (typeof(obj) === 'object') {\r\n            import_functions(obj, my_assign(opts, { prefix: key + '.' }));\r\n        }\r\n    }\r\n}\r\n\r\nfunction my_assign(dest, source) {\r\n    var obj = JSON.parse(JSON.stringify(dest));\r\n    for (var k in source) {\r\n        obj[k] = source[k];\r\n    }\r\n    return obj;\r\n}\r\n\r\nfunction build_expression(formula) {\r\n    return expression_builder(formula, {xlsx_Fx: xlsx_Fx, xlsx_raw_Fx: xlsx_raw_Fx});\r\n}\r\n\r\n\r\nfunction exec_formula(formula) {\r\n    //console.log(formula.exec_formula);\r\n    let root_exp = build_expression(formula);\r\n    root_exp.update_cell_value();\r\n}\r\n\r\nexec_formula.set_fx = function set_fx(name, fn) {\r\n    xlsx_Fx[name] = fn;\r\n};\r\n\r\nexec_formula.exec_fx = function exec_fx(name, args) {\r\n    return xlsx_Fx[name].apply(this, args);\r\n};\r\n\r\nexec_formula.localizeFunctions = function(dic) {\r\n    for (let newName in dic) {\r\n        let oldName = dic[newName];\r\n        if (xlsx_Fx[oldName]) {\r\n            xlsx_Fx[newName] = xlsx_Fx[oldName];\r\n        }\r\n        if (xlsx_raw_Fx[oldName]) {\r\n            xlsx_raw_Fx[newName] = xlsx_raw_Fx[oldName];\r\n        }\r\n    }\r\n};\r\n\r\nexec_formula.import_functions = import_functions;\r\nexec_formula.import_raw_functions = import_raw_functions;\r\nexec_formula.build_expression = build_expression;\r\nexec_formula.xlsx_Fx = xlsx_Fx;\r\nmodule.exports = exec_formula;\r\n","const Exp = require('./Exp.js');\r\nconst RawValue = require('./RawValue.js');\r\nconst UserFnExecutor = require('./UserFnExecutor.js');\r\nconst UserRawFnExecutor = require('./UserRawFnExecutor.js');\r\nconst common_operations = {\r\n    '*': 'multiply',\r\n    '+': 'plus',\r\n    '-': 'minus',\r\n    '/': 'divide',\r\n    '^': 'power',\r\n    '&': 'concat',\r\n    '<': 'lt',\r\n    '>': 'gt',\r\n    '=': 'eq'\r\n};\r\n\r\nmodule.exports = function expression_builder(formula, opts) {\r\n    formula.status = 'working';\r\n\r\n    var xlsx_Fx = opts.xlsx_Fx || {};\r\n    var xlsx_raw_Fx = opts.xlsx_raw_Fx || {};\r\n\r\n    var root_exp;\r\n    var str_formula = formula.cell.f;\r\n    if (str_formula[0] == '=') {\r\n        str_formula = str_formula.substr(1);\r\n    }\r\n    var exp_obj = root_exp = new Exp(formula);\r\n    var buffer = '',\r\n        was_string = false;\r\n    var fn_stack = [{\r\n        exp: exp_obj\r\n    }];\r\n\r\n    /**\r\n     * state pattern in functional way\r\n     */\r\n    function string(char) {\r\n        if (char === '\"') {\r\n            exp_obj.push(new RawValue(buffer));\r\n            was_string = true;\r\n            buffer = '';\r\n            state = start;\r\n        } else {\r\n            buffer += char;\r\n        }\r\n    }\r\n\r\n    function single_quote(char) {\r\n        if (char === \"'\") {\r\n            state = start;\r\n        }\r\n        buffer += char;\r\n    }\r\n\r\n    function ini_parentheses() {\r\n        var o, trim_buffer = buffer.trim(),\r\n            special = xlsx_Fx[trim_buffer];\r\n        var special_raw = xlsx_raw_Fx[trim_buffer];\r\n        if (special_raw) {\r\n            special = new UserRawFnExecutor(special_raw, formula);\r\n        }\r\n        else if (special) {\r\n            special = new UserFnExecutor(special, formula);\r\n        }\r\n        else if (trim_buffer) {\r\n            //Error: \"Worksheet 1\"!D145: Function INDEX not found\r\n            throw new Error('\"' + formula.sheet_name + '\"!' + formula.name + ': Function ' + buffer + ' not found');\r\n        }\r\n        o = new Exp(formula);\r\n        fn_stack.push({\r\n            exp: o,\r\n            special: special\r\n        });\r\n        exp_obj = o;\r\n        buffer = '';\r\n    }\r\n\r\n    function end_parentheses() {\r\n        var v, stack = fn_stack.pop();\r\n        exp_obj = stack.exp;\r\n        exp_obj.push(buffer);\r\n        v = exp_obj;\r\n        buffer = '';\r\n        exp_obj = fn_stack[fn_stack.length - 1].exp;\r\n        if (stack.special) {\r\n            stack.special.push(v);\r\n            exp_obj.push(stack.special);\r\n        }\r\n        else {\r\n            exp_obj.push(v);\r\n        }\r\n    }\r\n\r\n    function add_operation(char) {\r\n        if (!was_string) {\r\n            exp_obj.push(buffer);\r\n        }\r\n        was_string = false;\r\n        exp_obj.push(char);\r\n        buffer = '';\r\n    }\r\n\r\n    function start(char) {\r\n        if (char === '\"') {\r\n            state = string;\r\n            buffer = '';\r\n        } else if (char === \"'\") {\r\n            state = single_quote;\r\n            buffer = \"'\";\r\n        } else if (char === '(') {\r\n            ini_parentheses();\r\n        } else if (char === ')') {\r\n            end_parentheses();\r\n        } else if (common_operations[char]) {\r\n            add_operation(char);\r\n        } else if (char === ',' && fn_stack[fn_stack.length - 1].special) {\r\n            was_string = false;\r\n            fn_stack[fn_stack.length - 1].exp.push(buffer);\r\n            fn_stack[fn_stack.length - 1].special.push(fn_stack[fn_stack.length - 1].exp);\r\n            fn_stack[fn_stack.length - 1].exp = exp_obj = new Exp(formula);\r\n            buffer = '';\r\n        } else if (char !== ' ') {\r\n            buffer += char;\r\n        }\r\n    }\r\n    \r\n    var state = start;\r\n\r\n    for (var i = 0; i < str_formula.length; i++) {\r\n        state(str_formula[i]);\r\n    }\r\n    root_exp.push(buffer);\r\n    return root_exp;\r\n\r\n}","\"use strict\";\r\n\r\nmodule.exports = function find_all_cells_with_formulas(wb, exec_formula) {\r\n    let formula_ref = {};\r\n    let cells = [];\r\n    for (let sheet_name in wb.Sheets) {\r\n        let sheet = wb.Sheets[sheet_name];\r\n        for (let cell_name in sheet) {\r\n            if (sheet[cell_name] && sheet[cell_name].f) {\r\n                let formula = formula_ref[sheet_name + '!' + cell_name] = {\r\n                    formula_ref: formula_ref,\r\n                    wb: wb,\r\n                    sheet: sheet,\r\n                    sheet_name: sheet_name,\r\n                    cell: sheet[cell_name],\r\n                    name: cell_name,\r\n                    status: 'new',\r\n                    exec_formula: exec_formula\r\n                };\r\n                cells.push(formula);\r\n            }\r\n        }\r\n    }\r\n    return cells;\r\n};\r\n","\"use strict\";\r\n\r\nconst int_2_col_str = require('./int_2_col_str.js');\r\nconst col_str_2_int = require('./col_str_2_int.js');\r\nconst RawValue = require('./RawValue.js');\r\nconst Range = require('./Range.js');\r\nconst RefValue = require('./RefValue.js');\r\n\r\nfunction raw_offset(cell_ref, rows, columns, height, width) {\r\n    height = (height || new RawValue(1)).calc();\r\n    width = (width || new RawValue(1)).calc();\r\n    if (cell_ref.args.length === 1 && cell_ref.args[0].name === 'RefValue') {\r\n        var ref_value = cell_ref.args[0];\r\n        var parsed_ref = ref_value.parseRef();\r\n        var col = col_str_2_int(parsed_ref.cell_name) + columns.calc();\r\n        var col_str = int_2_col_str(col);\r\n        var row = +parsed_ref.cell_name.replace(/^[A-Z]+/g, '') + rows.calc();\r\n        var cell_name = parsed_ref.sheet_name + '!' + col_str + row;\r\n        if (height === 1 && width === 1) {\r\n            return new RefValue(cell_name, ref_value.formula).calc();\r\n        }\r\n        else {\r\n            var end_range_col = int_2_col_str(col + width - 1);\r\n            var end_range_row = row + height - 1;\r\n            var end_range = end_range_col + end_range_row;\r\n            var str_expression = cell_name + ':' + end_range;\r\n            return new Range(str_expression, ref_value.formula).calc();\r\n        }\r\n    }\r\n}\r\n\r\nfunction iferror(cell_ref, onerrorvalue) {\r\n    try {\r\n        var value = cell_ref.calc();\r\n        if (typeof value === 'number' && (isNaN(value) || value === Infinity || value === -Infinity)) {\r\n            return onerrorvalue.calc();\r\n        }\r\n        return value;\r\n    } catch(e) {\r\n        return onerrorvalue.calc();\r\n    }\r\n}\r\n\r\nfunction _if(condition, _then, _else) {\r\n    if (condition.calc()) {\r\n        // console.log(condition.formula.name)\r\n        // if (condition.formula.name === 'P40') {\r\n        //     console.log('P40 =', _then.calc());\r\n        //     console.log(' -->', _then.args[1].calc());\r\n        // }\r\n        return _then.calc();\r\n    }\r\n    else {\r\n        if (typeof _else === 'undefined') {\r\n            return false;\r\n        } else {\r\n            return _else.calc();\r\n        }\r\n    }\r\n}\r\n\r\nfunction and() {\r\n    for (var i = 0; i < arguments.length; i++) {\r\n        if(!arguments[i].calc()) return false;\r\n    }\r\n    return true;\r\n}\r\n\r\nfunction _or() {\r\n    for (var i = 0; i < arguments.length; i++) {\r\n        if(arguments[i].calc()) return true;\r\n    }\r\n    return false;\r\n}\r\n\r\nfunction transpose(expressionWithRange) {\r\n    let range = expressionWithRange.args[0];\r\n    // console.log(expressionWithRange.args[0])\r\n    // console.log(expressionWithRange.formula.wb.Sheets.Sheet1)\r\n    // console.log(range.calc())\r\n    let matrix = range.calc();\r\n    let cellName = expressionWithRange.formula.name;\r\n    let colRow = cellName.match(/([A-Z]+)([0-9]+)/);\r\n    let sheet = expressionWithRange.formula.sheet;\r\n    // console.log(colRow[1], colRow[2]);\r\n    // console.log(col_str_2_int(colRow[1]));\r\n    let colNumber = col_str_2_int(colRow[1]);\r\n    let rowNumber = +colRow[2];\r\n    for (let i = 0; i < matrix.length; i++) {\r\n        let matrixRow = matrix[i];\r\n        for (let j = 0; j < matrixRow.length; j++) {\r\n            let destinationColumn = colNumber + i;\r\n            let destinationRow = rowNumber + j;\r\n            let value = matrixRow[j];\r\n            // console.log(int_2_col_str(destinationColumn), destinationRow, value);\r\n            sheet[int_2_col_str(destinationColumn) + destinationRow].v = value;\r\n        }\r\n    }\r\n    // console.log(expressionWithRange.formula.name)\r\n    return matrix[0][0];\r\n}\r\n\r\nmodule.exports = {\r\n    'OFFSET': raw_offset,\r\n    'IFERROR': iferror,\r\n    'IF': _if,\r\n    'AND': and,\r\n    'OR': _or,\r\n    'TRANSPOSE': transpose\r\n};\r\n","\"use strict\";\r\n\r\n// +---------------------+\r\n// | FORMULAS REGISTERED |\r\n// +---------------------+\r\nlet formulas = {\r\n    'FLOOR': Math.floor,\r\n    '_xlfn.FLOOR.MATH': Math.floor,\r\n    'FLOOR.MATH': Math.floor,\r\n    'ABS': Math.abs,\r\n    'SQRT': Math.sqrt,\r\n    'VLOOKUP': vlookup,\r\n    'MAX': max,\r\n    'SUM': sum,\r\n    'MIN': min,\r\n    'CONCATENATE': concatenate,\r\n    'PMT': pmt,\r\n    'COUNTA': counta,\r\n    'IRR': irr,\r\n    'NORM.INV': normsInv,\r\n    '_xlfn.NORM.INV': normsInv,\r\n    'STDEV': stDeviation,\r\n    'AVERAGE': avg,\r\n    'EXP': EXP,\r\n    'LN': Math.log,\r\n    '_xlfn.VAR.P': var_p,\r\n    'VAR.P': var_p,\r\n    '_xlfn.COVARIANCE.P': covariance_p,\r\n    'COVARIANCE.P': covariance_p,\r\n    'TRIM': trim,\r\n    'LEN': len,\r\n    'ISBLANK': is_blank,\r\n    'HLOOKUP': hlookup,\r\n    'INDEX': index,\r\n    'MATCH': match,\r\n    'SUMPRODUCT': sumproduct,\r\n    'ISNUMBER': isnumber,\r\n    'TODAY': today,\r\n    'ISERROR': iserror,\r\n    'TIME': time,\r\n    'DAY': day,\r\n    'MONTH': month,\r\n    'YEAR': year,\r\n    'RIGHT': right,\r\n    'LEFT': left,\r\n    'IFS': ifs,\r\n    'ROUND': round,\r\n    'CORREL': correl, // missing test\r\n    'SUMIF': sumif, // missing test,\r\n    'CHOOSE': choose,\r\n    'SUBSTITUTE': substitute,\r\n    'CEILING': ceiling,\r\n    'XIRR': xirr,\r\n};\r\n\r\nfunction choose(option) {\r\n    return arguments[option];\r\n}\r\n\r\nfunction sumif(){\r\n\r\n    let elementToSum = arguments[1];\r\n    let sumResult = 0;\r\n\r\n    [].slice.call(arguments)[0][0].forEach((elt,key) =>{\r\n        \r\n        if (elt!==null){\r\n            //if the element is not a string but a number, number has no replace function, so converting to string.\r\n            elt = elt.toString();\r\n            if( elt.replace(/\\'/g, \"\") === elementToSum){\r\n                if (!isNaN([].slice.call(arguments)[2][0][key])){\r\n                    sumResult += [].slice.call(arguments)[2][0][key]\r\n                }\r\n            }\r\n        }\r\n    });\r\n    return sumResult\r\n}\r\n\r\nfunction correl(a,b){\r\n\r\n    a = getArrayOfNumbers(a);\r\n    b = getArrayOfNumbers(b);\r\n\r\n    if (a.length !== b.length) {\r\n        return 'N/D';\r\n    }\r\n    var inv_n = 1.0 / (a.length-1);\r\n    var avg_a = sum.apply(this, a) / a.length;\r\n    var avg_b = sum.apply(this, b) / b.length;\r\n    var s = 0.0;\r\n    var sa = 0;\r\n    var sb=0;\r\n    for (var i = 0; i < a.length; i++) {\r\n        s += (a[i] - avg_a) * (b[i] - avg_b);\r\n\r\n        sa+=Math.pow(a[i],2);\r\n        sb+=Math.pow(b[i],2);\r\n    }\r\n\r\n    sa=Math.sqrt(sa/inv_n);\r\n    sb=Math.sqrt(sb/inv_n);\r\n\r\n    return s / (inv_n*sa*sb);\r\n}\r\n\r\nfunction round(value, decimalPlaces) {\r\n    if (arguments.length === 0) throw new Error(\"Err:511\");\r\n    if (arguments.length === 1) return Math.round(value);\r\n    let roundMeasure = Math.pow(10, decimalPlaces);\r\n    return Math.round(roundMeasure*value)/roundMeasure\r\n}\r\n\r\nfunction today() {\r\n    var today = new Date();\r\n    today.setHours(0, 0, 0, 0);\r\n    return today;\r\n}\r\nfunction xirr() {\r\n    return 4;\r\n}\r\nfunction isnumber(x) {\r\n    return !isNaN(x);\r\n}\r\n\r\nfunction sumproduct() {\r\n    var parseNumber = function (string) {\r\n        if (string === undefined || string === '' || string === null) {\r\n            return 0;\r\n        }\r\n        if (!isNaN(string)) {\r\n            return parseFloat(string);\r\n        }\r\n        return 0;\r\n    },\r\n    consistentSizeRanges = function (matrixArray) {\r\n        var getRowCount = function(matrix) {\r\n                return matrix.length;\r\n            },\r\n            getColCount = function(matrix) {\r\n                return matrix[0].length;\r\n            },\r\n            rowCount = getRowCount(matrixArray[0]),\r\n            colCount = getColCount(matrixArray[0]);\r\n\r\n        for (var i = 1; i < matrixArray.length; i++) {\r\n            if (getRowCount(matrixArray[i]) !== rowCount\r\n                || getColCount(matrixArray[i]) !== colCount) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n\r\n    if (!arguments || arguments.length === 0) {\r\n        throw Error('#VALUE!');\r\n    }\r\n    if (!consistentSizeRanges(arguments)) {\r\n        throw Error('#VALUE!');\r\n    }\r\n    // throw error if any of the cells passed in arguments is in error\r\n    for (var i = 0; i < arguments.length; i++) {\r\n        var row = arguments[i];\r\n        if (Array.isArray(row)) {\r\n            for (var j = 0; j < row.length; j++) {\r\n                var col = row[j];\r\n                if (Array.isArray(col)) {\r\n                    for (var k = 0; k < col.length; k++) {\r\n                        var cell = col[k];\r\n                        if (cell && typeof cell === 'object' && cell.t === 'e') {\r\n                            throw Error(cell.w);\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    var cell = col;\r\n                    if (cell && typeof cell === 'object' && cell.t === 'e') {\r\n                        throw Error(cell.w);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            var cell = row;\r\n            if (cell && typeof cell === 'object' && cell.t === 'e') {\r\n                throw Error(cell.w);\r\n            }\r\n        }\r\n    }\r\n\r\n    var arrays = arguments.length + 1;\r\n    var result = 0;\r\n    var product;\r\n    var k;\r\n    var _i;\r\n    var _ij;\r\n    for (var i = 0; i < arguments[0].length; i++) {\r\n        if (!(arguments[0][i] instanceof Array)) {\r\n            product = 1;\r\n            for (k = 1; k < arrays; k++) {\r\n                _i = parseNumber(arguments[k - 1][i]);\r\n\r\n                product *= _i;\r\n            }\r\n            result += product;\r\n        } else {\r\n            for (var j = 0; j < arguments[0][i].length; j++) {\r\n                product = 1;\r\n                for (k = 1; k < arrays; k++) {\r\n                    _ij = parseNumber(arguments[k - 1][i][j]);\r\n\r\n                    product *= _ij;\r\n                }\r\n                result += product;\r\n            }\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction match_less_than_or_equal(matrix, lookupValue) {\r\n    var index;\r\n    var indexValue;\r\n    for (var idx = 0; idx < matrix.length; idx++) {\r\n        if (matrix[idx] === lookupValue) {\r\n            return idx + 1;\r\n        } else if (matrix[idx] < lookupValue) {\r\n            if (!indexValue) {\r\n                index = idx + 1;\r\n                indexValue = matrix[idx];\r\n            } else if (matrix[idx] > indexValue) {\r\n                index = idx + 1;\r\n                indexValue = matrix[idx];\r\n            }\r\n        }\r\n    }\r\n    if (!index) {\r\n        throw Error('#N/A');\r\n    }\r\n    return index;\r\n}\r\n\r\nfunction match_exactly_string(matrix, lookupValue) {\r\n    for (var idx = 0; idx < matrix.length; idx++) {\r\n        lookupValue = lookupValue.replace(/\\?/g, '.');\r\n        if (Array.isArray(matrix[idx])) {\r\n            if (matrix[idx].length === 1\r\n                && typeof matrix[idx][0] === 'string') {\r\n                    if (matrix[idx][0].toLowerCase() === lookupValue.toLowerCase()) {\r\n                        return idx + 1;\r\n                    }\r\n                }\r\n        } else if (typeof matrix[idx] === 'string') {\r\n            if (matrix[idx].toLowerCase() === lookupValue.toLowerCase()) {\r\n                return idx + 1;\r\n            }\r\n        }\r\n\r\n    }\r\n    throw Error('#N/A');\r\n}\r\n\r\nfunction match_exactly_non_string(matrix, lookupValue) {\r\n    for (var idx = 0; idx < matrix.length; idx++) {\r\n        if (Array.isArray(matrix[idx])) {\r\n            if (matrix[idx].length === 1) {\r\n                if (matrix[idx][0] === lookupValue) {\r\n                    return idx + 1;\r\n                }\r\n            }\r\n        } else if (matrix[idx] === lookupValue) {\r\n            return idx + 1;\r\n        }\r\n    }\r\n    throw Error('#N/A');\r\n}\r\n\r\n// +---------------------+\r\n// | THE IMPLEMENTATIONS |\r\n// +---------------------+\r\n\r\n\r\nfunction match_greater_than_or_equal(matrix, lookupValue) {\r\n    var index;\r\n    var indexValue;\r\n    for (var idx = 0; idx < matrix.length; idx++) {\r\n        if (Array.isArray(matrix[idx]) && matrix[idx].length > 0) {\r\n            // For array in column\r\n            if (matrix[idx][0] === lookupValue) {\r\n                return idx + 1;\r\n            } else if (matrix[idx][0] > lookupValue) {\r\n                if (!indexValue) {\r\n                    index = idx + 1;\r\n                    indexValue = matrix[idx][0];\r\n                } else if (matrix[idx][0] < indexValue) {\r\n                    index = idx + 1;\r\n                    indexValue = matrix[idx][0];\r\n                }\r\n            }\r\n        } else {\r\n            // For array in row\r\n            if (matrix[idx] === lookupValue) {\r\n                return idx + 1;\r\n            } else if (matrix[idx] > lookupValue) {\r\n                if (!indexValue) {\r\n                    index = idx + 1;\r\n                    indexValue = matrix[idx];\r\n                } else if (matrix[idx] < indexValue) {\r\n                    index = idx + 1;\r\n                    indexValue = matrix[idx];\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if (!index) {\r\n        throw Error('#N/A');\r\n    }\r\n    return index;\r\n}\r\n\r\nfunction match(lookupValue, matrix, matchType) {\r\n    if (Array.isArray(matrix)\r\n        && matrix.length === 1\r\n        && Array.isArray(matrix[0])) {\r\n        matrix = matrix[0];\r\n    }\r\n    if (!lookupValue && !matrix) {\r\n        throw Error('#N/A');\r\n    }\r\n    if (arguments.length === 2) {\r\n        matchType = 1;\r\n    }\r\n    if (!(matrix instanceof Array)) {\r\n        throw Error('#N/A');\r\n    }\r\n    if (matchType === 0) {\r\n        if (typeof lookupValue === 'string') {\r\n            return match_exactly_string(matrix, lookupValue);\r\n        } else {\r\n            return match_exactly_non_string(matrix, lookupValue);\r\n        }\r\n    } else if (matchType === 1) {\r\n        return match_less_than_or_equal(matrix, lookupValue);\r\n    } else if (matchType === -1) {\r\n        return match_greater_than_or_equal(matrix, lookupValue);\r\n    } else {\r\n        throw Error('#N/A');\r\n    }\r\n}\r\n\r\nfunction index(matrix, row_num, column_num) {\r\n    if (row_num <= matrix.length) {\r\n        var row = matrix[row_num - 1];\r\n        if (Array.isArray(row)) {\r\n            if (!column_num) {\r\n                return row;\r\n            } else if (column_num <= row.length) {\r\n                return row[column_num - 1];\r\n            }\r\n        } else {\r\n            return matrix[row_num];\r\n        }\r\n    }\r\n    throw Error('#REF!');\r\n}\r\n\r\n// impl ported from https://github.com/FormulaPages/hlookup\r\nfunction hlookup(needle, table, index, exactmatch) {\r\n    if (typeof needle === \"undefined\" || (0, is_blank)(needle)) {\r\n        throw Error('#N/A');\r\n    }\r\n\r\n    index = index || 0;\r\n    let row = table[0], i, searchingFor;\r\n\r\n    if (typeof needle === 'string') {\r\n        searchingFor = needle.toLowerCase();\r\n        for (i = 0; i < row.length; i++) {\r\n            if (exactmatch && row[i] === searchingFor || row[i].toLowerCase().indexOf(searchingFor) !== -1) {\r\n                return index < table.length + 1 ? table[index - 1][i] : table[0][i];\r\n            }\r\n        }\r\n    } else {\r\n        searchingFor = needle;\r\n        for (i = 0; i < row.length; i++) {\r\n            if (exactmatch && row[i] === searchingFor || row[i] === searchingFor) {\r\n                return index < table.length + 1 ? table[index - 1][i] : table[0][i];\r\n            }\r\n        }\r\n    }\r\n    throw Error('#N/A');\r\n}\r\n\r\nfunction len(a) {\r\n    return ('' + a).length;\r\n}\r\n\r\nfunction trim(a) {\r\n    return ('' + a).trim();\r\n}\r\n\r\nfunction is_blank(a) {\r\n    // console.log(a)\r\n    return !a;\r\n}\r\n\r\nfunction covariance_p(a, b) {\r\n    a = getArrayOfNumbers(a);\r\n    b = getArrayOfNumbers(b);\r\n    if (a.length != b.length) {\r\n        return 'N/D';\r\n    }\r\n    var inv_n = 1.0 / a.length;\r\n    var avg_a = sum.apply(this, a) / a.length;\r\n    var avg_b = sum.apply(this, b) / b.length;\r\n    var s = 0.0;\r\n    for (var i = 0; i < a.length; i++) {\r\n        s += (a[i] - avg_a) * (b[i] - avg_b);\r\n    }\r\n    return s * inv_n;\r\n}\r\n\r\nfunction getArrayOfNumbers(range) {\r\n    var arr = [];\r\n    for (var i = 0; i < range.length; i++) {\r\n        var arg = range[i];\r\n        if (Array.isArray(arg)) {\r\n            var matrix = arg;\r\n            for (var j = matrix.length; j--;) {\r\n                if (typeof(matrix[j]) == 'number') {\r\n                    arr.push(matrix[j]);\r\n                }\r\n                else if (Array.isArray(matrix[j])) {\r\n                    for (var k = matrix[j].length; k--;) {\r\n                        if (typeof(matrix[j][k]) == 'number') {\r\n                            arr.push(matrix[j][k]);\r\n                        }\r\n                    }\r\n                }\r\n                // else {\r\n                //   wtf is that?\r\n                // }\r\n            }\r\n        }\r\n        else {\r\n            if (typeof(arg) == 'number') {\r\n                arr.push(arg);\r\n            }\r\n        }\r\n    }\r\n    return arr;\r\n}\r\n\r\nfunction var_p() {\r\n    var average = avg.apply(this, arguments);\r\n    var s = 0.0;\r\n    var c = 0;\r\n    for (var i = 0; i < arguments.length; i++) {\r\n        var arg = arguments[i];\r\n        if (Array.isArray(arg)) {\r\n            var matrix = arg;\r\n            for (var j = matrix.length; j--;) {\r\n                for (var k = matrix[j].length; k--;) {\r\n                    if (matrix[j][k] !== null && matrix[j][k] !== undefined) {\r\n                        s += Math.pow(matrix[j][k] - average, 2);\r\n                        c++;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            s += Math.pow(arg - average, 2);\r\n            c++;\r\n        }\r\n    }\r\n    return s / c;\r\n}\r\n\r\nfunction EXP(n) {\r\n    return Math.pow(Math.E, n);\r\n}\r\n\r\nfunction avg() {\r\n    return sum.apply(this, arguments) / counta.apply(this, arguments);\r\n}\r\n\r\nfunction stDeviation() {\r\n    var array = getArrayOfNumbers(arguments);\r\n\r\n    function _mean(array) {\r\n        return array.reduce(function(a, b) {\r\n            return a + b;\r\n        }) / array.length;\r\n    }\r\n    var mean = _mean(array),\r\n        dev = array.map(function(itm) {\r\n            return (itm - mean) * (itm - mean);\r\n        });\r\n    return Math.sqrt(dev.reduce(function(a, b) {\r\n        return a + b;\r\n    }) / (array.length - 1));\r\n}\r\n\r\n/// Original C++ implementation found at http://www.wilmott.com/messageview.cfm?catid=10&threadid=38771\r\n/// C# implementation found at http://weblogs.asp.net/esanchez/archive/2010/07/29/a-quick-and-dirty-implementation-of-excel-norminv-function-in-c.aspx\r\n/*\r\n *     Compute the quantile function for the normal distribution.\r\n *\r\n *     For small to moderate probabilities, algorithm referenced\r\n *     below is used to obtain an initial approximation which is\r\n *     polished with a final Newton step.\r\n *\r\n *     For very large arguments, an algorithm of Wichura is used.\r\n *\r\n *  REFERENCE\r\n *\r\n *     Beasley, J. D. and S. G. Springer (1977).\r\n *     Algorithm AS 111: The percentage points of the normal distribution,\r\n *     Applied Statistics, 26, 118-121.\r\n *\r\n *      Wichura, M.J. (1988).\r\n *      Algorithm AS 241: The Percentage Points of the Normal Distribution.\r\n *      Applied Statistics, 37, 477-484.\r\n */\r\nfunction normsInv(p, mu, sigma) {\r\n    if (p < 0 || p > 1) {\r\n        throw \"The probality p must be bigger than 0 and smaller than 1\";\r\n    }\r\n    if (sigma < 0) {\r\n        throw \"The standard deviation sigma must be positive\";\r\n    }\r\n\r\n    if (p == 0) {\r\n        return -Infinity;\r\n    }\r\n    if (p == 1) {\r\n        return Infinity;\r\n    }\r\n    if (sigma == 0) {\r\n        return mu;\r\n    }\r\n\r\n    var q, r, val;\r\n\r\n    q = p - 0.5;\r\n\r\n    /*-- use AS 241 --- */\r\n    /* double ppnd16_(double *p, long *ifault)*/\r\n    /*      ALGORITHM AS241  APPL. STATIST. (1988) VOL. 37, NO. 3\r\n            Produces the normal deviate Z corresponding to a given lower\r\n            tail area of P; Z is accurate to about 1 part in 10**16.\r\n    */\r\n    if (Math.abs(q) <= .425) { /* 0.075 <= p <= 0.925 */\r\n        r = .180625 - q * q;\r\n        val =\r\n            q * (((((((r * 2509.0809287301226727 +\r\n                            33430.575583588128105) * r + 67265.770927008700853) * r +\r\n                        45921.953931549871457) * r + 13731.693765509461125) * r +\r\n                    1971.5909503065514427) * r + 133.14166789178437745) * r +\r\n                3.387132872796366608) / (((((((r * 5226.495278852854561 +\r\n                        28729.085735721942674) * r + 39307.89580009271061) * r +\r\n                    21213.794301586595867) * r + 5394.1960214247511077) * r +\r\n                687.1870074920579083) * r + 42.313330701600911252) * r + 1);\r\n    }\r\n    else { /* closer than 0.075 from {0,1} boundary */\r\n\r\n        /* r = min(p, 1-p) < 0.075 */\r\n        if (q > 0)\r\n            r = 1 - p;\r\n        else\r\n            r = p;\r\n\r\n        r = Math.sqrt(-Math.log(r));\r\n        /* r = sqrt(-log(r))  <==>  min(p, 1-p) = exp( - r^2 ) */\r\n\r\n        if (r <= 5) { /* <==> min(p,1-p) >= exp(-25) ~= 1.3888e-11 */\r\n            r += -1.6;\r\n            val = (((((((r * 7.7454501427834140764e-4 +\r\n                                .0227238449892691845833) * r + .24178072517745061177) *\r\n                            r + 1.27045825245236838258) * r +\r\n                        3.64784832476320460504) * r + 5.7694972214606914055) *\r\n                    r + 4.6303378461565452959) * r +\r\n                1.42343711074968357734) / (((((((r *\r\n                                1.05075007164441684324e-9 + 5.475938084995344946e-4) *\r\n                            r + .0151986665636164571966) * r +\r\n                        .14810397642748007459) * r + .68976733498510000455) *\r\n                    r + 1.6763848301838038494) * r +\r\n                2.05319162663775882187) * r + 1);\r\n        }\r\n        else { /* very close to  0 or 1 */\r\n            r += -5;\r\n            val = (((((((r * 2.01033439929228813265e-7 +\r\n                                2.71155556874348757815e-5) * r +\r\n                            .0012426609473880784386) * r + .026532189526576123093) *\r\n                        r + .29656057182850489123) * r +\r\n                    1.7848265399172913358) * r + 5.4637849111641143699) *\r\n                r + 6.6579046435011037772) / (((((((r *\r\n                            2.04426310338993978564e-15 + 1.4215117583164458887e-7) *\r\n                        r + 1.8463183175100546818e-5) * r +\r\n                    7.868691311456132591e-4) * r + .0148753612908506148525) * r + .13692988092273580531) * r +\r\n                .59983220655588793769) * r + 1);\r\n        }\r\n\r\n        if (q < 0.0) {\r\n            val = -val;\r\n        }\r\n    }\r\n\r\n    return mu + sigma * val;\r\n}\r\n\r\nfunction irr(range, guess) {\r\n    var min = -2.0;\r\n    var max = 1.0;\r\n    var n = 0;\r\n    do {\r\n        var guest = (min + max) / 2;\r\n        var NPV = 0;\r\n        for (var i = 0; i < range.length; i++) {\r\n            var arg = range[i];\r\n            NPV += arg[0] / Math.pow((1 + guest), i);\r\n        }\r\n        if (NPV > 0) {\r\n            if (min === max) {\r\n                max += Math.abs(guest);\r\n            }\r\n            min = guest;\r\n        }\r\n        else {\r\n            max = guest;\r\n        }\r\n        n++;\r\n    } while (Math.abs(NPV) > 0.000001 && n < 100000);\r\n    //console.log(n);\r\n    return guest;\r\n}\r\n\r\nfunction counta() {\r\n    var r = 0;\r\n    for (var i = arguments.length; i--;) {\r\n        var arg = arguments[i];\r\n        if (Array.isArray(arg)) {\r\n            var matrix = arg;\r\n            for (var j = matrix.length; j--;) {\r\n                for (var k = matrix[j].length; k--;) {\r\n                    if (matrix[j][k] !== null && matrix[j][k] !== undefined) {\r\n                        r++;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            if (arg !== null && arg !== undefined) {\r\n                r++;\r\n            }\r\n        }\r\n    }\r\n    return r;\r\n}\r\n\r\nfunction pmt(rate_per_period, number_of_payments, present_value, future_value, type) {\r\n    type = type || 0;\r\n    future_value = future_value || 0;\r\n    if (rate_per_period != 0.0) {\r\n        // Interest rate exists\r\n        var q = Math.pow(1 + rate_per_period, number_of_payments);\r\n        return -(rate_per_period * (future_value + (q * present_value))) / ((-1 + q) * (1 + rate_per_period * (type)));\r\n\r\n    }\r\n    else if (number_of_payments != 0.0) {\r\n        // No interest rate, but number of payments exists\r\n        return -(future_value + present_value) / number_of_payments;\r\n    }\r\n    return 0;\r\n}\r\n\r\nfunction concatenate() {\r\n    var r = '';\r\n    for (var i = 0; i < arguments.length; i++) {\r\n        var arg = arguments[i];\r\n        if (arg === null || arg === undefined) continue;\r\n        r += arg;\r\n    }\r\n    return r;\r\n}\r\n\r\nfunction sum() {\r\n    var r = 0;\r\n    for (var i = arguments.length; i--;) {\r\n        var arg = arguments[i];\r\n        if (Array.isArray(arg)) {\r\n            var matrix = arg;\r\n            for (var j = matrix.length; j--;) {\r\n                for (var k = matrix[j].length; k--;) {\r\n                    if (!isNaN(matrix[j][k])) {\r\n                        r += +matrix[j][k];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            r += +arg;\r\n        }\r\n    }\r\n    return r;\r\n}\r\n\r\nfunction max() {\r\n    var max = null;\r\n    for (var i = arguments.length; i--;) {\r\n        var arg = arguments[i];\r\n        if (Array.isArray(arg)) {\r\n            var arr = arg;\r\n            for (var j = arr.length; j--;) {\r\n                var col = arr[j];\r\n                if (Array.isArray(col)) {\r\n                    for (var k = col.length; k--;) {\r\n                        if (max == null || (col[k] != null && max < col[k])) {\r\n                            max = col[k];\r\n                        }\r\n                    }\r\n                }\r\n                else if (max == null || (col != null && max < col)) {\r\n                    max = col;\r\n                }\r\n            }\r\n        }\r\n        else if (!isNaN(arg) && (max == null || (arg != null && max < arg))) {\r\n            max = arg;\r\n        }\r\n    }\r\n    return max;\r\n}\r\n\r\nfunction min() {\r\n    var min = null;\r\n    for (var i = arguments.length; i--;) {\r\n        var arg = arguments[i];\r\n        if (Array.isArray(arg)) {\r\n            var arr = arg;\r\n            for (var j = arr.length; j--;) {\r\n                var col = arr[j];\r\n                if (Array.isArray(col)) {\r\n                    for (var k = col.length; k--;) {\r\n                        if (min == null || (col[k] != null && min > col[k])) {\r\n                            min = col[k];\r\n                        }\r\n                    }\r\n                }\r\n                else if (min == null || (col != null && min > col)) {\r\n                    min = col;\r\n                }\r\n            }\r\n        }\r\n        else if (!isNaN(arg) && (min == null || (arg != null && min > arg))) {\r\n            min = arg;\r\n        }\r\n    }\r\n    return min;\r\n}\r\n\r\nfunction vlookup(key, matrix, return_index, range_lookup=true) {\r\n    var val = null;\r\n    for (var i = 0; i < matrix.length; i++) {\r\n        if (matrix[i][0] < key) {\r\n            val = matrix[i][return_index - 1];\r\n        }\r\n        else if (matrix[i][0] == key) {\r\n            return matrix[i][return_index - 1];\r\n        }\r\n    }\r\n    if (range_lookup && val) {\r\n        return val;\r\n    }\r\n    throw Error('#N/A');\r\n}\r\n\r\nfunction iserror() {\r\n    // if an error is catched before getting there, true will be returned from the catch block\r\n    // if we get here then it's not an error\r\n    return false;\r\n}\r\n\r\nfunction time(hours, minutes, seconds) {\r\n    const MS_PER_DAY = 24 * 60 * 60 * 1000;\r\n    return ((hours * 60 + minutes) * 60 + seconds) * 1000 / MS_PER_DAY;\r\n}\r\n\r\nfunction day(date) {\r\n    if (!date.getDate) {\r\n        throw Error('#VALUE!');\r\n    }\r\n    var day = date.getDate();\r\n    if (isNaN(day)) {\r\n        throw Error('#VALUE!');\r\n    }\r\n    return day;\r\n}\r\n\r\nfunction month(date) {\r\n    if (!date.getMonth) {\r\n        throw Error('#VALUE!');\r\n    }\r\n    var month = date.getMonth();\r\n    if (isNaN(month)) {\r\n        throw Error('#VALUE!');\r\n    }\r\n    return month + 1;\r\n}\r\n\r\nfunction year(date) {\r\n    if (!date.getFullYear) {\r\n        throw Error('#VALUE!');\r\n    }\r\n    var year = date.getFullYear();\r\n    if (isNaN(year)) {\r\n        throw Error('#VALUE!');\r\n    }\r\n    return year;\r\n}\r\n\r\nfunction right(text, number) {\r\n    number = (number === undefined) ? 1 : parseFloat(number);\r\n\r\n    if (isNaN(number)) {\r\n        throw Error('#VALUE!');\r\n    }\r\n    if (text === undefined || text === null) {\r\n        text = '';\r\n    } else {\r\n        text = '' + text;\r\n    }\r\n    return text.substring(text.length - number);\r\n}\r\n\r\nfunction left(text, number) {\r\n    number = (number === undefined) ? 1 : parseFloat(number);\r\n\r\n    if (isNaN(number)) {\r\n        throw Error('#VALUE!');\r\n    }\r\n    if (text === undefined || text === null) {\r\n        text = '';\r\n    } else {\r\n        text = '' + text;\r\n    }\r\n    return text.substring(0, number);\r\n}\r\n\r\nfunction ifs(/*_cond1, _val1, _cond2, _val2, _cond3, _val3, ... */) {\r\n    for (var i = 0; i + 1 < arguments.length; i+=2) {\r\n        var cond = arguments[i];\r\n        var val = arguments[i+1];\r\n        if (cond) {\r\n            return val;\r\n        }\r\n    }\r\n    throw Error('#N/A');\r\n}\r\n\r\nfunction escapeRegExp(str) {\r\n    return str.replace(/([.*+?^=!:${}()|\\[\\]\\/\\\\])/g, \"\\\\$1\");\r\n}\r\n\r\nfunction substitute(text, old_text, new_text, occurrence) {\r\n    if(occurrence <= 0) {\r\n      throw Error('#VALUE!');\r\n    }\r\n    if (!text || !old_text || (!new_text && new_text !== '')) {\r\n      return text;\r\n    } else if (occurrence === undefined) {\r\n      return text.replace(new RegExp(escapeRegExp(old_text), 'g'), new_text);\r\n    } else {\r\n      var index = 0;\r\n      var i = 0;\r\n      while (text.indexOf(old_text, index) > 0) {\r\n        index = text.indexOf(old_text, index + 1);\r\n        i++;\r\n        if (i === occurrence) {\r\n          return text.substring(0, index) + new_text + text.substring(index + old_text.length);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\nfunction ceiling(number, significance) {\r\n    return Math.ceil(number / significance) * significance\r\n}\r\n\r\nmodule.exports = formulas;\r\n","\"use strict\";\r\n\r\nmodule.exports = function getSanitizedSheetName(sheet_name) {\r\n    var quotedMatch = sheet_name.match(/^'(.*)'$/);\r\n    if (quotedMatch) {\r\n        return quotedMatch[1];\r\n    }\r\n    else {\r\n        return sheet_name;\r\n    }\r\n};\r\n","\"use strict\";\r\n\r\nconst int_2_col_str = require('./int_2_col_str.js');\r\nconst col_str_2_int = require('./col_str_2_int.js');\r\nconst exec_formula = require('./exec_formula.js');\r\nconst find_all_cells_with_formulas = require('./find_all_cells_with_formulas.js');\r\nconst Calculator = require('./Calculator.js');\r\n\r\nvar mymodule = function(workbook, options) {\r\n    var formulas = find_all_cells_with_formulas(workbook, exec_formula);\r\n    const uniqueErrorMessages = new Set();\r\n\r\n    for (var i = formulas.length - 1; i >= 0; i--) {\r\n      try {\r\n         // console.log(formulas[i].name);\r\n        exec_formula(formulas[i]);\r\n      } catch (error) {\r\n        if (!options || !options.continue_after_error) {\r\n          throw error\r\n        }\r\n        if (options.log_error) {\r\n            const parts = error.message.split(':');\r\n            const functionError = parts[parts.length - 1].trim();\r\n            let errorMessage = \"\";\r\n            if (functionError.includes(\"Function\")){\r\n                 errorMessage = `Error: ${functionError}`; //Sheet: ${formulas[i].sheet_name},\r\n            } else {\r\n                 errorMessage = `Error: ${functionError} - Sheet: ${formulas[i].sheet_name} - Cell ${formulas[i].name}`;\r\n                 console.log(error);\r\n            }\r\n\r\n            // If the error message is not in the uniqueErrorMessages Set, add it\r\n            if (!uniqueErrorMessages.has(errorMessage)) {\r\n                uniqueErrorMessages.add(errorMessage);\r\n            }\r\n           //console.log('error executing formula', 'sheet', formulas[i].sheet_name, 'cell', formulas[i].name, error.message)\r\n        }\r\n      }\r\n    }\r\n    if (uniqueErrorMessages.size > 0) {\r\n        console.log('Unique errors executing formulas:');\r\n        for (const errorMessage of uniqueErrorMessages) {\r\n            console.log(errorMessage);\r\n        }\r\n    }\r\n};\r\n\r\nmymodule.calculator = function calculator(workbook) {\r\n    return new Calculator(workbook, exec_formula);\r\n};\r\n\r\nmymodule.set_fx = exec_formula.set_fx;\r\nmymodule.exec_fx = exec_formula.exec_fx;\r\nmymodule.col_str_2_int = col_str_2_int;\r\nmymodule.int_2_col_str = int_2_col_str;\r\nmymodule.import_functions = exec_formula.import_functions;\r\nmymodule.import_raw_functions = exec_formula.import_raw_functions;\r\nmymodule.xlsx_Fx = exec_formula.xlsx_Fx;\r\nmymodule.localizeFunctions = exec_formula.localizeFunctions;\r\n\r\nmymodule.XLSX_CALC = mymodule\r\n\r\nmodule.exports = mymodule;\r\n","\"use strict\";\r\n\r\nmodule.exports = function int_2_col_str(n) {\r\n    var dividend = n + 1;\r\n    var columnName = '';\r\n    var modulo;\r\n    var guard = 10;\r\n    while (dividend > 0 && guard--) {\r\n        modulo = (dividend - 1) % 26;\r\n        columnName = String.fromCharCode(modulo + 65) + columnName;\r\n        dividend = (dividend - modulo - 1) / 26;\r\n    }\r\n    return columnName;\r\n};","const RawValue = require('./RawValue.js');\r\nconst RefValue = require('./RefValue.js');\r\nconst LazyValue = require('./LazyValue.js');\r\nconst Range = require('./Range.js');\r\n\r\n// this is used to _cache_ range names so that it doesn't need to be queried\r\n// every time a range is used\r\nlet definedNames, wb;\r\nfunction getDefinedName(buffer, formula) {\r\n    if (!(formula.wb.Workbook && formula.wb.Workbook.Names)) {\r\n        return null;\r\n    }\r\n    if (wb !== formula.wb) {\r\n        wb = formula.wb;\r\n        definedNames = null;\r\n        return getDefinedName(buffer, formula);\r\n    }\r\n    if (definedNames) {\r\n        return definedNames[buffer];\r\n    }\r\n    const keys = Object.values(formula.wb.Workbook.Names);\r\n    if (keys.length === 0) {\r\n        return;\r\n    }\r\n    definedNames = {};\r\n    keys.forEach(({ Name, Ref }) => {\r\n        if (!Name.includes('.')) {\r\n            definedNames[Name] = Ref;\r\n        }\r\n    });\r\n\r\n    return getDefinedName(buffer, formula);\r\n}\r\n\r\nmodule.exports = function str_2_val(buffer, formula) {\r\n    if (!isNaN(buffer)) {\r\n        return new RawValue(+buffer);\r\n    }\r\n    if (buffer === 'TRUE') {\r\n        return new RawValue(1);\r\n    }\r\n    if (typeof buffer !== 'string') {\r\n        return buffer;\r\n    }\r\n\r\n    buffer = buffer.trim().replace(/\\$/g, '')\r\n\r\n    if (buffer.match(/^[A-Z]+[0-9]+:[A-Z]+[0-9]+$/)) {\r\n        return new Range(buffer, formula);\r\n    }\r\n    if (buffer.match(/^[^!]+![A-Z]+[0-9]+:[A-Z]+[0-9]+$/)) {\r\n        return new Range(buffer, formula);\r\n    }\r\n    if (buffer.match(/^[A-Z]+:[A-Z]+$/)) {\r\n        return new Range(buffer, formula);\r\n    }\r\n    if (buffer.match(/^[^!]+![A-Z]+:[A-Z]+$/)) {\r\n        return new Range(buffer, formula);\r\n    }\r\n    if (buffer.match(/^[A-Z]+[0-9]+$/)) {\r\n        return new RefValue(buffer, formula);\r\n    }\r\n    if (buffer.match(/^[^!]+![A-Z]+[0-9]+$/)) {\r\n        return new RefValue(buffer, formula);\r\n    }\r\n    if (buffer.match(/%$/)) {\r\n        var inner = str_2_val(buffer.substr(0, buffer.length-1), formula)\r\n        return new LazyValue(() => inner.calc() / 100)\r\n    }\r\n    if (getDefinedName(buffer, formula)) {\r\n        return str_2_val(getDefinedName(buffer, formula), formula);\r\n    }\r\n    return buffer;\r\n};\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(138);\n"],"names":["root","factory","exports","module","define","amd","a","i","this","RawValue","str_2_val","find_all_cells_with_formulas","constructor","workbook","exec_formula","expressions","variables","formulas","length","exp","build_expression","push","console","log","calcNames","setVar","var_name","value","variable","setValue","forEach","setVarOfExpression","getVars","vars","k","calc","Workbook","Names","item","val","getRef","Ref","Name","ref_name","Error","formula","formula_ref","wb","args","arg","name","execute","update_cell_value","Range","MS_PER_DAY","exp_id","last_arg","self","isEmpty","checkVariable","obj","getCurrentCellIndex","replace","exec","op","fn","r","splice","b","Array","isArray","e","id","cell","v","t","errorValues","undefined","message","w","status","concat","Date","parse","exec_minus","Math","pow","getTime","toLowerCase","buffer","col_str_2_int","int_2_col_str","getSanitizedSheetName","str_expression","range_expression","sheet_name","sheet","indexOf","aux","split","Sheets","max_row","arr","min_row","parseInt","str_max_row","min_col","max_col","matrix","row","j","cell_name","cell_full_name","f","includes","parseRef","resolved_ref","ref_cell","user_function","result","apply","map","col_str","colstr","charCodeAt","expression_builder","xlsx_Fx","xlsx_raw_Fx","import_raw_functions","functions","opts","key","import_functions","formulajs","prefix","override","my_assign","dest","source","JSON","stringify","set_fx","exec_fx","localizeFunctions","dic","newName","oldName","Exp","UserFnExecutor","UserRawFnExecutor","common_operations","root_exp","str_formula","substr","exp_obj","was_string","fn_stack","string","char","state","start","single_quote","stack","o","trim_buffer","trim","special","special_raw","ini_parentheses","pop","add_operation","cells","RefValue","cell_ref","rows","columns","height","width","ref_value","parsed_ref","col","end_range_col","onerrorvalue","isNaN","Infinity","condition","_then","_else","arguments","expressionWithRange","colRow","match","colNumber","rowNumber","matrixRow","destinationColumn","destinationRow","floor","abs","sqrt","return_index","range_lookup","max","sum","min","rate_per_period","number_of_payments","present_value","future_value","type","q","counta","range","guess","n","guest","NPV","normsInv","array","getArrayOfNumbers","mean","reduce","_mean","dev","itm","avg","E","var_p","covariance_p","is_blank","needle","table","index","exactmatch","searchingFor","row_num","column_num","lookupValue","matchType","idx","match_exactly_string","match_exactly_non_string","indexValue","match_less_than_or_equal","match_greater_than_or_equal","parseNumber","parseFloat","matrixArray","getRowCount","getColCount","rowCount","colCount","consistentSizeRanges","product","arrays","x","today","setHours","hours","minutes","seconds","date","getDate","day","getMonth","month","getFullYear","year","text","number","substring","decimalPlaces","round","roundMeasure","inv_n","avg_a","avg_b","s","sa","sb","elementToSum","sumResult","slice","call","elt","toString","option","old_text","new_text","occurrence","RegExp","significance","ceil","average","c","p","mu","sigma","quotedMatch","Calculator","mymodule","options","uniqueErrorMessages","Set","error","continue_after_error","log_error","parts","functionError","errorMessage","has","add","size","calculator","XLSX_CALC","modulo","dividend","columnName","guard","String","fromCharCode","LazyValue","definedNames","getDefinedName","keys","Object","values","inner","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__"],"sourceRoot":""}