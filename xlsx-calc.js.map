{"version":3,"file":"xlsx-calc.js","mappings":"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","sources":["webpack://xlsx-calc-km/webpack/universalModuleDefinition","webpack://xlsx-calc-km/./src/Calculator.js","webpack://xlsx-calc-km/./src/Exp.js","webpack://xlsx-calc-km/./src/LazyValue.js","webpack://xlsx-calc-km/./src/Range.js","webpack://xlsx-calc-km/./src/RawValue.js","webpack://xlsx-calc-km/./src/RefValue.js","webpack://xlsx-calc-km/./src/UserFnExecutor.js","webpack://xlsx-calc-km/./src/UserRawFnExecutor.js","webpack://xlsx-calc-km/./src/col_str_2_int.js","webpack://xlsx-calc-km/./src/exec_formula.js","webpack://xlsx-calc-km/./src/expression_builder.js","webpack://xlsx-calc-km/./src/find_all_cells_with_formulas.js","webpack://xlsx-calc-km/./src/formulas-raw.js","webpack://xlsx-calc-km/./src/formulas.js","webpack://xlsx-calc-km/./src/getSanitizedSheetName.js","webpack://xlsx-calc-km/./src/index.js","webpack://xlsx-calc-km/./src/int_2_col_str.js","webpack://xlsx-calc-km/./src/str_2_val.js","webpack://xlsx-calc-km/./src/utils/common.js","webpack://xlsx-calc-km/./src/utils/criteria-eval.js","webpack://xlsx-calc-km/./src/utils/error.js","webpack://xlsx-calc-km/webpack/bootstrap","webpack://xlsx-calc-km/webpack/startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, () => {\nreturn ","\"use strict\";\r\n\r\nconst RawValue = require('./RawValue.js');\r\nconst str_2_val = require('./str_2_val.js');\r\nconst find_all_cells_with_formulas = require('./find_all_cells_with_formulas.js');\r\n\r\nclass Calculator {\r\n    \r\n    constructor(workbook, exec_formula) {\r\n        this.workbook = workbook;\r\n        this.expressions = [];\r\n        this.exec_formula = exec_formula;\r\n        this.variables = {};\r\n        this.formulas = find_all_cells_with_formulas(workbook, exec_formula);\r\n        for (let i = this.formulas.length - 1; i >= 0; i--) {\r\n            let exp = exec_formula.build_expression(this.formulas[i]);\r\n\r\n            this.expressions.push(exp);\r\n        }\r\n        console.log(this.expressions);\r\n        this.calcNames();\r\n    }\r\n    \r\n    setVar(var_name, value) {\r\n        let variable = this.variables[var_name];\r\n        if (variable) {\r\n            variable.setValue(value);\r\n        } else {\r\n            this.expressions.forEach(exp => {\r\n                this.setVarOfExpression(exp, var_name, value);\r\n            });\r\n        }\r\n    }\r\n    \r\n    getVars() {\r\n        let vars = {};\r\n        for (let k in this.variables) {\r\n            vars[k] = this.variables[k].calc();\r\n        }\r\n        return vars;\r\n    }\r\n    \r\n    calcNames() {\r\n        if (!this.workbook || !this.workbook.Workbook || !this.workbook.Workbook.Names) {\r\n            return;\r\n        }\r\n        this.workbook.Workbook.Names.forEach(item => {\r\n            let val = this.getRef(item.Ref);\r\n            this.variables[item.Name] = val;\r\n            this.expressions.forEach(exp => {\r\n                this.setVarOfExpression(exp, item.Name);\r\n            });\r\n        });\r\n    }\r\n    \r\n    getRef(ref_name) {\r\n        if (!this.formulas.length) {\r\n            throw new Error(\"No formula found.\");\r\n        }\r\n        let first_formula = this.formulas[0];\r\n        let formula_ref = first_formula.formula_ref;\r\n        let formula = {\r\n            formula_ref: formula_ref,\r\n            wb: this.workbook,\r\n            exec_formula: this.exec_formula\r\n        };\r\n        return str_2_val(ref_name, formula);\r\n    }\r\n    \r\n    setVarOfExpression(exp, var_name, value) {\r\n        for (let i = 0; i < exp.args.length; i++) {\r\n            let arg = exp.args[i];\r\n            if (arg === var_name) {\r\n                exp.args[i] = this.variables[var_name] || (this.variables[var_name] = new RawValue(value));\r\n            } else if (typeof arg === 'object' && (arg.name === 'Expression' || arg.name === 'UserFn')) {\r\n                this.setVarOfExpression(arg, var_name, value);\r\n            }\r\n        }\r\n    }\r\n    \r\n    execute() {\r\n        this.expressions.forEach(exp => {\r\n            exp.update_cell_value();\r\n        });\r\n    }\r\n}\r\n\r\nmodule.exports = Calculator;","\"use strict\";\r\n\r\nconst RawValue = require('./RawValue.js');\r\nconst Range = require('./Range.js');\r\nconst str_2_val = require('./str_2_val.js');\r\n\r\nconst MS_PER_DAY = 24 * 60 * 60 * 1000;\r\n\r\nvar exp_id = 0;\r\n\r\nmodule.exports = function Exp(formula) {\r\n    var self = this;\r\n    self.id = ++exp_id;\r\n    self.args = [];\r\n    self.name = 'Expression';\r\n    self.update_cell_value = update_cell_value;\r\n    self.formula = formula;\r\n    \r\n    function update_cell_value() {\r\n        try {\r\n            if (Array.isArray(self.args) \r\n                    && self.args.length === 1\r\n                    && self.args[0] instanceof Range) {\r\n                throw Error('#VALUE!');\r\n            }\r\n            if(formula.cell.f.includes(\"AVERAGE(\")) { //  && formula.cell.f.includes(\"*12)\")\r\n                 console.log('calc_start: '+ formula.name + \" | \" + formula.cell.f);\r\n            }\r\n            formula.cell.v = self.calc();\r\n            if(formula.cell.f.includes(\"AVERAGE(\")) { //  && formula.cell.f.includes(\"*12)\")\r\n               console.log('calc_end: '+ formula.name + \" | \" + formula.cell.f);\r\n            }\r\n            if (typeof(formula.cell.v) === 'string') {\r\n                formula.cell.t = 's';\r\n            }\r\n            else if (typeof(formula.cell.v) === 'number') {\r\n                formula.cell.t = 'n';\r\n            }\r\n        }\r\n        catch (e) {\r\n            var errorValues = {\r\n                '#NULL!': 0x00,\r\n                '#DIV/0!': 0x07,\r\n                '#VALUE!': 0x0F,\r\n                '#REF!': 0x17,\r\n                '#NAME?': 0x1D,\r\n                '#NUM!': 0x24,\r\n                '#N/A': 0x2A,\r\n                '#GETTING_DATA': 0x2B\r\n            };\r\n            if (errorValues[e.message] !== undefined) {\r\n                formula.cell.t = 'e';\r\n                formula.cell.w = e.message;\r\n                formula.cell.v = errorValues[e.message];\r\n            }\r\n            else {\r\n                throw e;\r\n            }\r\n        }\r\n        finally {\r\n            formula.status = 'done';\r\n        }\r\n    }\r\n    function isEmpty(value) {\r\n        return value === undefined || value === null || value === \"\";\r\n    }\r\n    \r\n    function checkVariable(obj) {\r\n        if (typeof obj.calc !== 'function') {\r\n            throw new Error('Undefined XXX ' + obj);\r\n        }\r\n    }\r\n\r\n    function getCurrentCellIndex() {\r\n        return +self.formula.name.replace(/[^0-9]/g, '');\r\n    }\r\n    \r\n    function exec(op, args, fn) {\r\n        for (var i = 0; i < args.length; i++) {\r\n            if (args[i] === op) {\r\n              //  try {\r\n                    if (i===0 && op==='+') {\r\n                        checkVariable(args[i + 1]);\r\n                        let r = args[i + 1].calc();\r\n                        args.splice(i, 2, new RawValue(r));\r\n                    } else {\r\n                        checkVariable(args[i - 1]);\r\n                        checkVariable(args[i + 1]);\r\n\r\n                        let a = args[i - 1].calc();\r\n                        let b = args[i + 1].calc();\r\n                        if (Array.isArray(a)) {\r\n                            if(getCurrentCellIndex()<a.length - 1) {\r\n                                a = a[getCurrentCellIndex() - 1][0];\r\n                            } else {\r\n                                a = a[0][0];\r\n                              //  console.log(a);\r\n                               // console.log(formula.name);\r\n                              //  console.log(args);\r\n                              //  console.log(\"CellIndex: \"+getCurrentCellIndex());\r\n                            }\r\n                        }\r\n                        if (Array.isArray(b)) {\r\n                            if(getCurrentCellIndex()<b.length - 1) {\r\n                                b = b[getCurrentCellIndex() - 1][0];\r\n                            } else {\r\n                                b = b[0][0];\r\n                              //  console.log(b);\r\n                               // console.log(formula.name);\r\n                               // console.log(args);\r\n                               // console.log(\"CellIndex: \"+getCurrentCellIndex());\r\n                            }\r\n                        }\r\n\r\n                        let r = fn(a, b);\r\n                        args.splice(i - 1, 3, new RawValue(r));\r\n                        i--;\r\n                    }\r\n                /*}\r\n                catch (e) {\r\n                     console.log('[Exp.js] - ' + formula.name + ': evaluating ' + formula.cell.f + '\\n' + e.message);\r\n                    throw e;\r\n                }*/\r\n            }\r\n        }\r\n    }\r\n\r\n    function exec_minus(args) {\r\n        //console.log(args);\r\n        for (var i = args.length; i--;) {\r\n            if (args[i] === '-') {\r\n                checkVariable(args[i + 1]);\r\n                var b = args[i + 1].calc();\r\n                if (i > 0 && typeof args[i - 1] !== 'string') {\r\n                    args.splice(i, 1, '+');\r\n                    if (b instanceof Date) {\r\n                        b = Date.parse(b);\r\n                        checkVariable(args[i - 1]);\r\n                        var a = args[i - 1].calc();\r\n                        if (a instanceof Date) {\r\n                            a = Date.parse(a) / MS_PER_DAY;\r\n                            b = b / MS_PER_DAY;\r\n                            args.splice(i - 1, 1, new RawValue(a));\r\n                        }\r\n                    }\r\n                    args.splice(i + 1, 1, new RawValue(-b));\r\n                }\r\n                else {\r\n                    if (typeof b === 'string') {\r\n                        throw new Error('#VALUE!');\r\n                    }\r\n                    args.splice(i, 2, new RawValue(-b));\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    self.calc = function() {\r\n        let args = self.args.concat();\r\n        exec_minus(args);\r\n\r\n        exec('^', args, function(a, b) {\r\n            return Math.pow(+a, +b);\r\n        });\r\n        exec('/', args, function(a, b) {\r\n            if (b == 0) {\r\n                throw Error('#DIV/0!');\r\n            }\r\n            return (+a) / (+b);\r\n        });\r\n        exec('*', args, function(a, b) {\r\n            /*if(typeof args[2].formula == \"object\"){\r\n                console.log(args[2].formula.name);\r\n            }*/\r\n\r\n           // console.log(args[2].str_expression);\r\n            //console.log(a);\r\n            //console.log(b);\r\n            return (+a) * (+b);\r\n        });\r\n        exec('+', args, function(a, b) {\r\n            if (a instanceof Date && typeof b === 'number') {\r\n                b = b * MS_PER_DAY;\r\n            }\r\n            return (+a) + (+b);\r\n        });\r\n        exec('&', args, function(a, b) {\r\n            return '' + a + b;\r\n        });\r\n        exec('<', args, function(a, b) {\r\n            return a < b;\r\n        });\r\n        exec('>', args, function(a, b) {\r\n           // console.log(args);\r\n          //  console.log(\"a: \" + a + \" b: \" + b);\r\n            return a > b;\r\n        });\r\n        exec('>=', args, function(a, b) {\r\n            return a >= b;\r\n        });\r\n        exec('<=', args, function(a, b) {\r\n            return a <= b;\r\n        });\r\n        exec('<>', args, function(a, b) {\r\n            if (a instanceof Date && b instanceof Date) {\r\n                return a.getTime() !== b.getTime();\r\n            }\r\n            if (isEmpty(a) && isEmpty(b)) {\r\n                return false;\r\n            }\r\n            return a !== b;\r\n        });\r\n        exec('=', args, function(a, b) {\r\n            if (a instanceof Date && b instanceof Date) {\r\n                return a.getTime() === b.getTime();\r\n            }\r\n            if (isEmpty(a) && isEmpty(b)) {\r\n                return true;\r\n            }\r\n            if ((a == null && b === 0) || (a === 0 && b == null)) {\r\n                return true;\r\n            }\r\n            if (typeof a === 'string' && typeof b === 'string' && a.toLowerCase() === b.toLowerCase()) {\r\n                return true;\r\n            }\r\n            return a == b;\r\n        });\r\n        if (args.length == 1) {\r\n            if (typeof(args[0].calc) !== 'function') {\r\n                return args[0];\r\n            }\r\n            else {\r\n                return args[0].calc();\r\n            }\r\n        }\r\n    };\r\n\r\n    var last_arg;\r\n    self.push = function(buffer) {\r\n        if (buffer) {\r\n            var v = str_2_val(buffer, formula);\r\n            if (((v === '=') && (last_arg == '>' || last_arg == '<')) || (last_arg == '<' && v === '>')) {\r\n                self.args[self.args.length - 1] += v;\r\n            }\r\n            else {\r\n                self.args.push(v);\r\n            }\r\n            last_arg = v;\r\n            //console.log(self.id, '-->', v);\r\n        }\r\n    };\r\n};","\"use strict\";\r\n\r\nmodule.exports = function LazyValue(fn) {\r\n    this.calc = function() {\r\n        return fn();\r\n    };\r\n};\r\n","\"use strict\";\r\n\r\nconst col_str_2_int = require('./col_str_2_int.js');\r\nconst int_2_col_str = require('./int_2_col_str.js');\r\nconst getSanitizedSheetName = require('./getSanitizedSheetName.js');\r\n\r\nmodule.exports = function Range(str_expression, formula) {\r\n    this.calc = function() {\r\n        var range_expression, sheet_name, sheet;\r\n        if (str_expression.indexOf('!') != -1) {\r\n            var aux = str_expression.split('!');\r\n            sheet_name = getSanitizedSheetName(aux[0]);\r\n            range_expression = aux[1];\r\n        }\r\n        else {\r\n            sheet_name = formula.sheet_name;\r\n            range_expression = str_expression;\r\n        }\r\n        sheet = formula.wb.Sheets[sheet_name];\r\n        var arr = range_expression.split(':');\r\n        var min_row = parseInt(arr[0].replace(/^[A-Z]+/, ''), 10) || 0;\r\n        var str_max_row = arr[1].replace(/^[A-Z]+/, '');\r\n        var max_row;\r\n        if (str_max_row === '' && sheet['!ref']) {\r\n            str_max_row = sheet['!ref'].split(':')[1].replace(/^[A-Z]+/, '');\r\n        }\r\n        // the max is 1048576, but TLE\r\n        max_row = parseInt(str_max_row == '' ? '500000' : str_max_row, 10);\r\n        var min_col = col_str_2_int(arr[0]);\r\n        var max_col = col_str_2_int(arr[1]);\r\n        var matrix = [];\r\n        for (var i = min_row; i <= max_row; i++) {\r\n            var row = [];\r\n            matrix.push(row);\r\n            for (var j = min_col; j <= max_col; j++) {\r\n                var cell_name = int_2_col_str(j) + i;\r\n                var cell_full_name = sheet_name + '!' + cell_name;\r\n                var formula_ref = formula.formula_ref[cell_full_name];\r\n                if (formula_ref) {\r\n                    if (formula_ref.status === 'new') {\r\n                        formula.exec_formula(formula_ref);\r\n                    } else if (formula_ref.status === 'working') {\r\n                        if (formula_ref.cell.f.includes(formula.name)) {\r\n                            throw new Error('Circular ref');\r\n                        }\r\n                        formula.exec_formula(formula_ref);\r\n                    }\r\n                    if (sheet[cell_name].t === 'e') {\r\n                        row.push(sheet[cell_name]);\r\n                    }\r\n                    else {\r\n                        row.push(sheet[cell_name].v);\r\n                    }\r\n                }\r\n                else if (sheet[cell_name]) {\r\n                    if (sheet[cell_name].t === 'e') {\r\n                        row.push(sheet[cell_name]);\r\n                    }\r\n                    else {\r\n                        row.push(sheet[cell_name].v);\r\n                    }\r\n                }\r\n                else {\r\n                    row.push(null);\r\n                }\r\n            }\r\n        }\r\n       // console.log(matrix);\r\n        return matrix;\r\n    };\r\n};\r\n","\"use strict\";\r\n\r\nmodule.exports = function RawValue(value) {\r\n    this.setValue = function(v) {\r\n        value = v;\r\n    };\r\n    this.calc = function() {\r\n        return value;\r\n    };\r\n};\r\n","\"use strict\";\r\n\r\nconst getSanitizedSheetName = require('./getSanitizedSheetName.js');\r\n\r\nmodule.exports = function RefValue(str_expression, formula) {\r\n    var self = this;\r\n    this.name = 'RefValue';\r\n    this.str_expression = str_expression;\r\n    this.formula = formula;\r\n\r\n    self.parseRef = function() {\r\n        var sheet, sheet_name, cell_name, cell_full_name;\r\n        if (str_expression.indexOf('!') != -1) {\r\n            var aux = str_expression.split('!');\r\n            sheet_name = getSanitizedSheetName(aux[0]);\r\n            sheet = formula.wb.Sheets[sheet_name];\r\n            cell_name = aux[1];\r\n        }\r\n        else {\r\n            sheet = formula.sheet;\r\n            sheet_name = formula.sheet_name;\r\n            cell_name = str_expression;\r\n        }\r\n        if (!sheet) {\r\n            throw Error(\"Sheet \" + sheet_name + \" not found.\");\r\n        }\r\n        cell_full_name = sheet_name + '!' + cell_name;\r\n        return {\r\n            sheet: sheet,\r\n            sheet_name: sheet_name,\r\n            cell_name: cell_name,\r\n            cell_full_name: cell_full_name\r\n        };\r\n    };\r\n\r\n    this.calc = function() {\r\n        var resolved_ref = self.parseRef();\r\n        var sheet = resolved_ref.sheet;\r\n        var cell_name = resolved_ref.cell_name;\r\n        var cell_full_name = resolved_ref.cell_full_name;\r\n        var ref_cell = sheet[cell_name];\r\n        if (!ref_cell) {\r\n            return null;\r\n        }\r\n        var formula_ref = formula.formula_ref[cell_full_name];\r\n        if (formula_ref) {\r\n            if (formula_ref.status === 'new') {\r\n                formula.exec_formula(formula_ref);\r\n                if (ref_cell.t === 'e') {\r\n                    console.log('ref is an error with new formula', cell_full_name, ref_cell.w);\r\n                    throw new Error(ref_cell.w);\r\n                }\r\n                return ref_cell.v;\r\n            }\r\n            else if (formula_ref.status === 'working') {\r\n                if (ref_cell.f.includes(formula.name)) {\r\n                    throw new Error('Circular ref');\r\n                }\r\n                formula.exec_formula(formula_ref);\r\n                return this.calc();\r\n            }\r\n            else if (formula_ref.status === 'done') {\r\n                if (ref_cell.t === 'e') {\r\n                    console.log('ref is an error after formula eval', cell_full_name, ref_cell.w);\r\n                    throw new Error(ref_cell.w);\r\n                }\r\n                return ref_cell.v;\r\n            }\r\n        }\r\n        else {\r\n            if (ref_cell.t === 'e') {\r\n                console.log('ref is an error with no formula', cell_name);\r\n                throw new Error(ref_cell.w);\r\n            }\r\n            return ref_cell.v;\r\n        }\r\n    };\r\n};\r\n","\"use strict\";\r\n\r\nmodule.exports = function UserFnExecutor(user_function) {\r\n    var self = this;\r\n    self.name = 'UserFn';\r\n    self.args = [];\r\n    self.calc = function() {\r\n        var errorValues = {\r\n            '#NULL!': 0x00,\r\n            '#DIV/0!': 0x07,\r\n            '#VALUE!': 0x0F,\r\n            '#REF!': 0x17,\r\n            '#NAME?': 0x1D,\r\n            '#NUM!': 0x24,\r\n            '#N/A': 0x2A,\r\n            '#GETTING_DATA': 0x2B\r\n        }, result;\r\n        try {\r\n            result = user_function.apply(self, self.args.map(f=>f.calc()));\r\n        } catch (e) {\r\n            if (user_function.name === 'is_blank'\r\n                && errorValues[e.message] !== undefined) {\r\n                // is_blank applied to an error cell doesn't propagate the error\r\n                result = 0;\r\n            }\r\n            else if (user_function.name === 'iserror'\r\n                && errorValues[e.message] !== undefined) {\r\n                // iserror applied to an error doesn't propagate the error and returns true\r\n                result = true;\r\n            }\r\n            else {\r\n                throw e;\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n    self.push = function(buffer) {\r\n        self.args.push(buffer);\r\n    };\r\n};","\"use strict\";\r\n\r\nmodule.exports = function UserRawFnExecutor(user_function, formula) {\r\n    var self = this;\r\n    self.name = 'UserRawFn';\r\n    self.args = [];\r\n    self.calc = function() {\r\n        try {\r\n            return user_function.apply(self, self.args);\r\n        } catch(e) {\r\n            // debug\r\n            // console.log('----------------', user_function);\r\n            // console.log(formula.name);\r\n            // console.log(self);\r\n            throw e;\r\n        }\r\n    };\r\n    self.push = function(buffer) {\r\n        self.args.push(buffer);\r\n    };\r\n};\r\n","\"use strict\";\r\n\r\nmodule.exports = function col_str_2_int(col_str) {\r\n    var r = 0;\r\n    var colstr = col_str.replace(/[0-9]+$/, '');\r\n    for (var i = colstr.length; i--;) {\r\n        r += Math.pow(26, colstr.length - i - 1) * (colstr.charCodeAt(i) - 64);\r\n    }\r\n    return r - 1;\r\n};","\"use strict\";\r\n\r\nconst expression_builder = require('./expression_builder.js');\r\n\r\nlet xlsx_Fx = {};\r\nlet xlsx_raw_Fx = {};\r\n\r\nimport_functions(require('./formulas.js'));\r\nimport_raw_functions(require('./formulas-raw.js'));\r\n\r\nfunction import_raw_functions(functions, opts) {\r\n    for (var key in functions) {\r\n        xlsx_raw_Fx[key] = functions[key];\r\n    }\r\n}\r\n\r\nfunction import_functions(formulajs, opts) {\r\n\r\n    opts = opts || {};\r\n    var prefix = opts.prefix || '';\r\n    for (var key in formulajs) {\r\n        var obj = formulajs[key];\r\n        if (typeof(obj) === 'function') {\r\n            if (opts.override || !xlsx_Fx[prefix + key]) {\r\n                xlsx_Fx[prefix + key] = obj;\r\n            }\r\n            // else {\r\n            //     console.log(prefix + key, 'already exists.');\r\n            //     console.log('  to override:');\r\n            //     console.log('    XLSX_CALC.import_functions(yourlib, {override: true})');\r\n            // }\r\n        }\r\n        else if (typeof(obj) === 'object') {\r\n            import_functions(obj, my_assign(opts, { prefix: key + '.' }));\r\n        }\r\n    }\r\n}\r\n\r\nfunction my_assign(dest, source) {\r\n    var obj = JSON.parse(JSON.stringify(dest));\r\n    for (var k in source) {\r\n        obj[k] = source[k];\r\n    }\r\n    return obj;\r\n}\r\n\r\nfunction build_expression(formula) {\r\n    return expression_builder(formula, {xlsx_Fx: xlsx_Fx, xlsx_raw_Fx: xlsx_raw_Fx});\r\n}\r\n\r\n\r\nfunction exec_formula(formula) {\r\n    //console.log(formula.exec_formula);\r\n    let root_exp = build_expression(formula);\r\n    root_exp.update_cell_value();\r\n}\r\n\r\nexec_formula.set_fx = function set_fx(name, fn) {\r\n    xlsx_Fx[name] = fn;\r\n};\r\n\r\nexec_formula.exec_fx = function exec_fx(name, args) {\r\n    return xlsx_Fx[name].apply(this, args);\r\n};\r\n\r\nexec_formula.localizeFunctions = function(dic) {\r\n    for (let newName in dic) {\r\n        let oldName = dic[newName];\r\n        if (xlsx_Fx[oldName]) {\r\n            xlsx_Fx[newName] = xlsx_Fx[oldName];\r\n        }\r\n        if (xlsx_raw_Fx[oldName]) {\r\n            xlsx_raw_Fx[newName] = xlsx_raw_Fx[oldName];\r\n        }\r\n    }\r\n};\r\n\r\nexec_formula.import_functions = import_functions;\r\nexec_formula.import_raw_functions = import_raw_functions;\r\nexec_formula.build_expression = build_expression;\r\nexec_formula.xlsx_Fx = xlsx_Fx;\r\nmodule.exports = exec_formula;\r\n","const Exp = require('./Exp.js');\r\nconst RawValue = require('./RawValue.js');\r\nconst UserFnExecutor = require('./UserFnExecutor.js');\r\nconst UserRawFnExecutor = require('./UserRawFnExecutor.js');\r\nconst common_operations = {\r\n    '*': 'multiply',\r\n    '+': 'plus',\r\n    '-': 'minus',\r\n    '/': 'divide',\r\n    '^': 'power',\r\n    '&': 'concat',\r\n    '<': 'lt',\r\n    '>': 'gt',\r\n    '=': 'eq'\r\n};\r\n\r\nmodule.exports = function expression_builder(formula, opts) {\r\n    formula.status = 'working';\r\n\r\n    var xlsx_Fx = opts.xlsx_Fx || {};\r\n    var xlsx_raw_Fx = opts.xlsx_raw_Fx || {};\r\n\r\n    var root_exp;\r\n    var str_formula = formula.cell.f;\r\n    if (str_formula[0] == '=') {\r\n        str_formula = str_formula.substr(1);\r\n    }\r\n    var exp_obj = root_exp = new Exp(formula);\r\n    var buffer = '',\r\n        was_string = false;\r\n    var fn_stack = [{\r\n        exp: exp_obj\r\n    }];\r\n\r\n    /**\r\n     * state pattern in functional way\r\n     */\r\n    function string(char) {\r\n        if (char === '\"') {\r\n            exp_obj.push(new RawValue(buffer));\r\n            was_string = true;\r\n            buffer = '';\r\n            state = start;\r\n        } else {\r\n            buffer += char;\r\n        }\r\n    }\r\n\r\n    function single_quote(char) {\r\n        if (char === \"'\") {\r\n            state = start;\r\n        }\r\n        buffer += char;\r\n    }\r\n\r\n    function ini_parentheses() {\r\n        var o, trim_buffer = buffer.trim(),\r\n            special = xlsx_Fx[trim_buffer];\r\n        var special_raw = xlsx_raw_Fx[trim_buffer];\r\n        if (special_raw) {\r\n            special = new UserRawFnExecutor(special_raw, formula);\r\n        }\r\n        else if (special) {\r\n            special = new UserFnExecutor(special, formula);\r\n        }\r\n        else if (trim_buffer) {\r\n            //Error: \"Worksheet 1\"!D145: Function INDEX not found\r\n            throw new Error('\"' + formula.sheet_name + '\"!' + formula.name + ': Function ' + buffer + ' not found');\r\n        }\r\n        o = new Exp(formula);\r\n        fn_stack.push({\r\n            exp: o,\r\n            special: special\r\n        });\r\n        exp_obj = o;\r\n        buffer = '';\r\n    }\r\n\r\n    function end_parentheses() {\r\n        var v, stack = fn_stack.pop();\r\n        exp_obj = stack.exp;\r\n        exp_obj.push(buffer);\r\n        v = exp_obj;\r\n        buffer = '';\r\n        exp_obj = fn_stack[fn_stack.length - 1].exp;\r\n        if (stack.special) {\r\n            stack.special.push(v);\r\n            exp_obj.push(stack.special);\r\n        }\r\n        else {\r\n            exp_obj.push(v);\r\n        }\r\n    }\r\n\r\n    function add_operation(char) {\r\n        if (!was_string) {\r\n            exp_obj.push(buffer);\r\n        }\r\n        was_string = false;\r\n        exp_obj.push(char);\r\n        buffer = '';\r\n    }\r\n\r\n    function start(char) {\r\n        if (char === '\"') {\r\n            state = string;\r\n            buffer = '';\r\n        } else if (char === \"'\") {\r\n            state = single_quote;\r\n            buffer = \"'\";\r\n        } else if (char === '(') {\r\n            ini_parentheses();\r\n        } else if (char === ')') {\r\n            end_parentheses();\r\n        } else if (common_operations[char]) {\r\n            add_operation(char);\r\n        } else if (char === ',' && fn_stack[fn_stack.length - 1].special) {\r\n            was_string = false;\r\n            fn_stack[fn_stack.length - 1].exp.push(buffer);\r\n            fn_stack[fn_stack.length - 1].special.push(fn_stack[fn_stack.length - 1].exp);\r\n            fn_stack[fn_stack.length - 1].exp = exp_obj = new Exp(formula);\r\n            buffer = '';\r\n        } else if (char !== ' ') {\r\n            buffer += char;\r\n        }\r\n    }\r\n    \r\n    var state = start;\r\n\r\n    for (var i = 0; i < str_formula.length; i++) {\r\n        state(str_formula[i]);\r\n    }\r\n    root_exp.push(buffer);\r\n    return root_exp;\r\n\r\n}","\"use strict\";\r\n\r\nmodule.exports = function find_all_cells_with_formulas(wb, exec_formula) {\r\n    let formula_ref = {};\r\n    let cells = [];\r\n    for (let sheet_name in wb.Sheets) {\r\n        let sheet = wb.Sheets[sheet_name];\r\n        for (let cell_name in sheet) {\r\n            if (sheet[cell_name] && sheet[cell_name].f) {\r\n                let formula = formula_ref[sheet_name + '!' + cell_name] = {\r\n                    formula_ref: formula_ref,\r\n                    wb: wb,\r\n                    sheet: sheet,\r\n                    sheet_name: sheet_name,\r\n                    cell: sheet[cell_name],\r\n                    name: cell_name,\r\n                    status: 'new',\r\n                    exec_formula: exec_formula\r\n                };\r\n                cells.push(formula);\r\n            }\r\n        }\r\n    }\r\n    return cells;\r\n};\r\n","\"use strict\";\r\n\r\nconst int_2_col_str = require('./int_2_col_str.js');\r\nconst col_str_2_int = require('./col_str_2_int.js');\r\nconst RawValue = require('./RawValue.js');\r\nconst Range = require('./Range.js');\r\nconst RefValue = require('./RefValue.js');\r\n\r\nfunction raw_offset(cell_ref, rows, columns, height, width) {\r\n    height = (height || new RawValue(1)).calc();\r\n    width = (width || new RawValue(1)).calc();\r\n    if (cell_ref.args.length === 1 && cell_ref.args[0].name === 'RefValue') {\r\n        var ref_value = cell_ref.args[0];\r\n        var parsed_ref = ref_value.parseRef();\r\n        var col = col_str_2_int(parsed_ref.cell_name) + columns.calc();\r\n        var col_str = int_2_col_str(col);\r\n        var row = +parsed_ref.cell_name.replace(/^[A-Z]+/g, '') + rows.calc();\r\n        var cell_name = parsed_ref.sheet_name + '!' + col_str + row;\r\n        if (height === 1 && width === 1) {\r\n            return new RefValue(cell_name, ref_value.formula).calc();\r\n        }\r\n        else {\r\n            var end_range_col = int_2_col_str(col + width - 1);\r\n            var end_range_row = row + height - 1;\r\n            var end_range = end_range_col + end_range_row;\r\n            var str_expression = cell_name + ':' + end_range;\r\n            return new Range(str_expression, ref_value.formula).calc();\r\n        }\r\n    }\r\n}\r\n\r\nfunction iferror(cell_ref, onerrorvalue) {\r\n    try {\r\n        var value = cell_ref.calc();\r\n        if (typeof value === 'number' && (isNaN(value) || value === Infinity || value === -Infinity)) {\r\n            return onerrorvalue.calc();\r\n        }\r\n        return value;\r\n    } catch(e) {\r\n        return onerrorvalue.calc();\r\n    }\r\n}\r\n\r\nfunction _if(condition, _then, _else) {\r\n   /* console.log(condition);\r\n    console.log(_then);\r\n    console.log(_else);*/\r\n    if (condition.calc()) {\r\n        // console.log(condition.formula.name)\r\n        // if (condition.formula.name === 'P40') {\r\n        //     console.log('P40 =', _then.calc());\r\n        //     console.log(' -->', _then.args[1].calc());\r\n        // }\r\n        return _then.calc();\r\n    }\r\n    else {\r\n        if (typeof _else === 'undefined') {\r\n            return false;\r\n        } else {\r\n            return _else.calc();\r\n        }\r\n    }\r\n}\r\n\r\nfunction and() {\r\n    for (var i = 0; i < arguments.length; i++) {\r\n        if(!arguments[i].calc()) return false;\r\n    }\r\n    return true;\r\n}\r\n\r\nfunction _or() {\r\n    for (var i = 0; i < arguments.length; i++) {\r\n        if(arguments[i].calc()) return true;\r\n    }\r\n    return false;\r\n}\r\n\r\nfunction transpose(expressionWithRange) {\r\n    let range = expressionWithRange.args[0];\r\n    // console.log(expressionWithRange.args[0])\r\n    // console.log(expressionWithRange.formula.wb.Sheets.Sheet1)\r\n    // console.log(range.calc())\r\n    let matrix = range.calc();\r\n    let cellName = expressionWithRange.formula.name;\r\n    let colRow = cellName.match(/([A-Z]+)([0-9]+)/);\r\n    let sheet = expressionWithRange.formula.sheet;\r\n    // console.log(colRow[1], colRow[2]);\r\n    // console.log(col_str_2_int(colRow[1]));\r\n    let colNumber = col_str_2_int(colRow[1]);\r\n    let rowNumber = +colRow[2];\r\n    for (let i = 0; i < matrix.length; i++) {\r\n        let matrixRow = matrix[i];\r\n        for (let j = 0; j < matrixRow.length; j++) {\r\n            let destinationColumn = colNumber + i;\r\n            let destinationRow = rowNumber + j;\r\n            let value = matrixRow[j];\r\n            // console.log(int_2_col_str(destinationColumn), destinationRow, value);\r\n            sheet[int_2_col_str(destinationColumn) + destinationRow].v = value;\r\n        }\r\n    }\r\n    // console.log(expressionWithRange.formula.name)\r\n    return matrix[0][0];\r\n}\r\n\r\nmodule.exports = {\r\n    'OFFSET': raw_offset,\r\n    'IFERROR': iferror,\r\n    'IF': _if,\r\n    'AND': and,\r\n    'OR': _or,\r\n    'TRANSPOSE': transpose\r\n};\r\n","\"use strict\";\r\n\r\n// +---------------------+\r\n// | FORMULAS REGISTERED |\r\n// +---------------------+\r\nconst utils = require('./utils/common.js');\r\nconst error = require('./utils/error.js');\r\nconst evalExpression = require('./utils/criteria-eval.js');\r\nconst formatter = new Intl.DateTimeFormat('en-US', { timeZone: 'Europe/Berlin' });\r\n\r\nlet formulas = {\r\n    'FLOOR': Math.floor,\r\n    '_xlfn.FLOOR.MATH': Math.floor,\r\n    'FLOOR.MATH': Math.floor,\r\n    'ABS': Math.abs,\r\n    'SQRT': Math.sqrt,\r\n    'VLOOKUP': vlookup,\r\n    'MAX': max,\r\n    'SUM': sum,\r\n    'MIN': min,\r\n    'CONCATENATE': concatenate,\r\n    'PMT': pmt,\r\n    'COUNTA': counta,\r\n    'IRR': irr,\r\n    'NORM.INV': normsInv,\r\n    '_xlfn.NORM.INV': normsInv,\r\n    'STDEV': stDeviation,\r\n    'AVERAGE': avg,\r\n    'EXP': EXP,\r\n    'LN': Math.log,\r\n    '_xlfn.VAR.P': var_p,\r\n    'VAR.P': var_p,\r\n    '_xlfn.COVARIANCE.P': covariance_p,\r\n    'COVARIANCE.P': covariance_p,\r\n    'TRIM': trim,\r\n    'LEN': len,\r\n    'ISBLANK': is_blank,\r\n    'HLOOKUP': hlookup,\r\n    'INDEX': index,\r\n    'MATCH': match,\r\n    'SUMPRODUCT': sumproduct,\r\n    'ISNUMBER': isnumber,\r\n    'TODAY': today,\r\n    'ISERROR': iserror,\r\n    'TIME': time,\r\n    'DAY': day,\r\n    'MONTH': month,\r\n    'YEAR': year,\r\n    'RIGHT': right,\r\n    'LEFT': left,\r\n    'IFS': ifs,\r\n    'ROUND': round,\r\n    'CORREL': correl, // missing test\r\n    'SUMIF': sumif, // missing test,\r\n    'SUMIFS': sumifs, // missing test,\r\n    'CHOOSE': choose,\r\n    'SUBSTITUTE': substitute,\r\n    'CEILING': ceiling,\r\n    'XIRR': xirr,\r\n    'SEQUENCE': sequence,\r\n    'EOMONTH': eomonth,\r\n    'EDATE': edate,\r\n    'XLOOKUP': xlookup,\r\n   // 'OFFSET': offset,\r\n    'ANCHORARRAY': anchorarray,\r\n};\r\n\r\n/* formulas */\r\n\r\n/* Vars available in formulas:\r\n* arguments = Arguments of function\r\n*  */\r\n\r\nfunction choose(option) {\r\n    return arguments[option];\r\n}\r\n\r\nfunction sumif(){\r\n\r\n    let elementToSum = arguments[1];\r\n    let sumResult = 0;\r\n\r\n    [].slice.call(arguments)[0][0].forEach((elt,key) =>{\r\n        \r\n        if (elt!==null){\r\n            //if the element is not a string but a number, number has no replace function, so converting to string.\r\n            elt = elt.toString();\r\n            if( elt.replace(/\\'/g, \"\") === elementToSum){\r\n                if (!isNaN([].slice.call(arguments)[2][0][key])){\r\n                    sumResult += [].slice.call(arguments)[2][0][key]\r\n                }\r\n            }\r\n        }\r\n    });\r\n    return sumResult\r\n}\r\n\r\nfunction sumifs() {\r\n    try {\r\n        const args = utils.argsToArray(arguments)\r\n\r\n        const range = utils.parseNumberArray(utils.flatten(args.shift()))\r\n        if (range instanceof Error) {\r\n            return range\r\n        }\r\n        /*if(range.length==3 && args.length==2) {\r\n            console.log(args)\r\n            console.log(range)\r\n        }*/\r\n\r\n        const criterias = args\r\n        const criteriaLength = criterias.length / 2\r\n\r\n        for (let i = 0; i < criteriaLength; i++) {\r\n            criterias[i * 2] = utils.flatten(criterias[i * 2])\r\n        }\r\n\r\n        let result = 0\r\n\r\n        for (let i = 0; i < range.length; i++) {\r\n            let isMeetCondition = false\r\n\r\n            for (let j = 0; j < criteriaLength; j++) {\r\n                let valueToTest = criterias[j * 2][i]\r\n                let criteria = criterias[j * 2 + 1]\r\n                const isWildcard = criteria === void 0 || criteria === '*'\r\n\r\n                // If one is date, convert both to dates\r\n                const dateRegex = /^\\d{1,2}\\/\\d{1,2}\\/\\d{4}$/\r\n\r\n                let valueIsDate = dateRegex.test(valueToTest);\r\n                let criteriaIsDate = dateRegex.test(criteria);\r\n\r\n                if(valueIsDate || criteriaIsDate){\r\n                   /*                 let dateCase;\r\n                    try {\r\n                        if (valueIsUnixTimestamp) {\r\n                            console.log(typeof valueToTest);\r\n                            if (criteriaIsUnixTimestamp) {\r\n                                dateCase = \"Case 1: valueToTest is Unix timestamp, criteria is Unix timestamp => convert both\";\r\n                                valueToTest = formatter.format(new Date(valueToTest).getTime())\r\n                                criteria = formatter.format(new Date(criteria).getTime())\r\n                            } else if (criteriaIsDate) {\r\n                                dateCase = \"Case 2: valueToTest is Unix timestamp, criteria is Date => convert valueToTest\";\r\n                                valueToTest = formatter.format(new Date(valueToTest).getTime())\r\n                            } else {\r\n                                dateCase = \"Case 3: valueToTest is Unix timestamp, criteria is no Date (serial number) => convert both in different styles\";\r\n                                valueToTest = formatter.format(new Date(valueToTest).getTime())\r\n                                criteria = formatter.format(utils.serialNumberToDate(criteria))\r\n                            }\r\n                        } else if(valueIsDate){\r\n                            if (criteriaIsUnixTimestamp) {\r\n                                dateCase = \"Case 4: valueToTest is Date, criteria is Unix timestamp => convert criteria\";\r\n                                criteria = formatter.format(new Date(criteria).getTime())\r\n                            } else if (criteriaIsDate) {\r\n                                dateCase = \"Case 5: valueToTest is Date, criteria is Date => do nothing\";\r\n                            } else {\r\n                                dateCase = \"Case 6: valueToTest is Date, criteria is no Date (serial number) => convert criteria\";\r\n                                criteria = formatter.format(utils.serialNumberToDate(criteria))\r\n                            }\r\n                        } else {\r\n                            if (criteriaIsUnixTimestamp) {\r\n                                dateCase = \"Case 7: valueToTest no Date (serial number), criteria is Unix timestamp => convert both in different styles\";\r\n                                valueToTest = formatter.format(utils.serialNumberToDate(valueToTest))\r\n                                criteria = formatter.format(new Date(criteria).getTime())\r\n                            } else if (criteriaIsDate) {\r\n                                dateCase = \"Case 8: valueToTest no Date (serial number), criteria is Date => convert valueToTest\";\r\n                                valueToTest = formatter.format(utils.serialNumberToDate(valueToTest))\r\n                            } else {\r\n                                dateCase = \"Case 9: valueToTest no Date (serial number), criteria is no Date (serial number) => do nothing\";\r\n                            }\r\n                        }\r\n                    } catch (error){\r\n                        console.log(\"CATCH ERROR ### valuetoTest: \" + criterias[j * 2][i] + \" (\" + valueIsUnixTimestamp + \" | \" + typeof criterias[j * 2][i] + \" | \"+ formatter.format(new Date(criterias[j * 2][i]).getTime()) + \" | \" + valueIsDate + \") /// criteria: \" + criteria + \" (\" + criteriaIsUnixTimestamp + \" | \" + criteriaIsDate + \")\");\r\n                        console.log(error);\r\n                    }*/\r\n\r\n\r\n                    if(!dateRegex.test(valueToTest)){\r\n                        valueToTest = formatter.format(utils.serialNumberToDate(valueToTest))\r\n                    }\r\n                    if(!dateRegex.test(criteria)){ // criteria ist kein Datum\r\n                        criteria = formatter.format(utils.serialNumberToDate(criteria))\r\n                    }\r\n                   // if(range.length==3 && args.length==2) {\r\n                       // console.log(\"result: \"+valueToTest+\" | \"+criteria);\r\n                    //}\r\n                }\r\n\r\n                let computedResult = false\r\n\r\n                if (isWildcard) {\r\n                    computedResult = true\r\n                } else {\r\n                    const tokenizedCriteria = evalExpression.parse(criteria + '')\r\n                    const tokens = [evalExpression.createToken(valueToTest, evalExpression.TOKEN_TYPE_LITERAL)].concat(\r\n                        tokenizedCriteria\r\n                    )\r\n                    computedResult = evalExpression.compute(tokens);\r\n\r\n                    /*if(range.length == 241){\r\n                        console.log(\"computedResult: \"+i);\r\n                        console.log(tokens);\r\n                        console.log(computedResult);\r\n                    }*/\r\n\r\n                }\r\n\r\n                // Criterias are calculated as AND so any `false` breakes the loop as unmeet condition\r\n                if (!computedResult) {\r\n                    isMeetCondition = false\r\n                    break\r\n                }\r\n\r\n                isMeetCondition = true\r\n            }\r\n\r\n            if (isMeetCondition) {\r\n                result += range[i]\r\n            }\r\n        }\r\n        //console.log(result);\r\n        return result\r\n    } catch (error) {\r\n        console.error(error)\r\n        // handle error here\r\n    }\r\n}\r\n\r\nfunction correl(a,b){\r\n\r\n    a = getArrayOfNumbers(a);\r\n    b = getArrayOfNumbers(b);\r\n\r\n    if (a.length !== b.length) {\r\n        return 'N/D';\r\n    }\r\n    var inv_n = 1.0 / (a.length-1);\r\n    var avg_a = sum.apply(this, a) / a.length;\r\n    var avg_b = sum.apply(this, b) / b.length;\r\n    var s = 0.0;\r\n    var sa = 0;\r\n    var sb=0;\r\n    for (var i = 0; i < a.length; i++) {\r\n        s += (a[i] - avg_a) * (b[i] - avg_b);\r\n\r\n        sa+=Math.pow(a[i],2);\r\n        sb+=Math.pow(b[i],2);\r\n    }\r\n\r\n    sa=Math.sqrt(sa/inv_n);\r\n    sb=Math.sqrt(sb/inv_n);\r\n\r\n    return s / (inv_n*sa*sb);\r\n}\r\n\r\nfunction round(value, decimalPlaces) {\r\n    if (arguments.length === 0) throw new Error(\"Err:511\");\r\n    if (arguments.length === 1) return Math.round(value);\r\n    let roundMeasure = Math.pow(10, decimalPlaces);\r\n    return Math.round(roundMeasure*value)/roundMeasure\r\n}\r\n\r\nfunction today() {\r\n    var today = new Date();\r\n    today.setHours(0, 0, 0, 0);\r\n    return today;\r\n}\r\nfunction xirr() {\r\n    console.log(\"xirr is used\");\r\n    return 0.01;\r\n}\r\nfunction xlookup() {\r\n    console.log(\"xlookup is used\");\r\n    return 0.01;\r\n}\r\nfunction sequence() {\r\n    console.log(\"sequence is used\");\r\n    return 0.01;\r\n}\r\nfunction anchorarray() {\r\n    console.log(\"anchorarray is used\");\r\n    return 0.01;\r\n}\r\n/*function offset() {\r\n    console.log(\"offset is used\");\r\n    return 0.01;\r\n}*/\r\n\r\nfunction eomonth() {\r\n    let start_date = arguments[\"0\"];\r\n    let months = arguments[\"1\"];\r\n    start_date = utils.parseDate(start_date)\r\n\r\n    if (start_date instanceof Error) {\r\n        return start_date\r\n    }\r\n\r\n    if (isNaN(months)) {\r\n        return error.value\r\n    }\r\n\r\n    months = parseInt(months, 10)\r\n\r\n    let return_date;\r\n    if(start_date == undefined) {\r\n        //console.log(\"start_date is undefined\");\r\n        //console.log(arguments);\r\n        //console.log(start_date);\r\n        return_date = 0;\r\n    } else {\r\n        return_date = formatter.format(new Date(start_date.getFullYear(), start_date.getMonth() + months + 1, 0));\r\n    }\r\n    return return_date;\r\n}\r\nfunction edate(start_date, months) {\r\n    start_date = utils.parseDate(start_date)\r\n\r\n    if (start_date instanceof Error) {\r\n        return start_date\r\n    }\r\n    if (isNaN(months)) {\r\n        return error.value\r\n    }\r\n    let date = new Date(start_date);\r\n\r\n    if (isNaN(date.getTime())) {\r\n        console.log(\"edate is not a valid date: \"+start_date+\" - \"+months);\r\n        return 0;\r\n    } else {\r\n        months = parseInt(months, 10)\r\n        start_date.setMonth(start_date.getMonth() + months)\r\n        //console.log(\"edate 3: \"+start_date+\" - \"+months);\r\n        start_date = formatter.format(start_date);\r\n        //console.log(\"edate 4: \"+start_date+\" - \"+months);\r\n\r\n        return start_date\r\n    }\r\n\r\n\r\n}\r\n\r\nfunction isnumber(x) {\r\n    return !isNaN(x);\r\n}\r\n\r\nfunction sumproduct() {\r\n\r\n    var parseNumber = function (string) {\r\n        if (string === undefined || string === '' || string === null) {\r\n            return 0;\r\n        }\r\n        if (!isNaN(string)) {\r\n            return parseFloat(string);\r\n        }\r\n        return 0;\r\n    },\r\n    consistentSizeRanges = function (matrixArray) {\r\n        var getRowCount = function(matrix) {\r\n                if (Array.isArray(matrix)) {\r\n                    return matrix.length;\r\n                } else {\r\n                    return 0;\r\n                }\r\n            },\r\n            getColCount = function(matrix) {\r\n                if (Array.isArray(matrix)) {\r\n                    return matrix[0].length;\r\n                } else {\r\n                    return 0;\r\n                }\r\n            },\r\n            rowCount = getRowCount(matrixArray[0]),\r\n            colCount = getColCount(matrixArray[0]);\r\n\r\n        for (var i = 1; i < matrixArray.length; i++) {\r\n            if (getRowCount(matrixArray[i]) !== rowCount\r\n                || getColCount(matrixArray[i]) !== colCount) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n\r\n    if (!arguments || arguments.length === 0) {\r\n        throw Error('#VALUE!');\r\n    }\r\n    if (!consistentSizeRanges(arguments)) {\r\n        throw Error('#VALUE!');\r\n    }\r\n\r\n    // throw error if any of the cells passed in arguments is in error\r\n    for (var i = 0; i < arguments.length; i++) {\r\n        var row = arguments[i];\r\n        if (Array.isArray(row)) {\r\n            for (var j = 0; j < row.length; j++) {\r\n                var col = row[j];\r\n                if (Array.isArray(col)) {\r\n                    for (var k = 0; k < col.length; k++) {\r\n                        var cell = col[k];\r\n                        if (cell && typeof cell === 'object' && cell.t === 'e') {\r\n                            throw Error(cell.w);\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    var cell = col;\r\n                    if (cell && typeof cell === 'object' && cell.t === 'e') {\r\n                        throw Error(cell.w);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            var cell = row;\r\n            if (cell && typeof cell === 'object' && cell.t === 'e') {\r\n                throw Error(cell.w);\r\n            }\r\n        }\r\n    }\r\n    var arrays = arguments.length + 1;\r\n    var result = 0;\r\n    var product;\r\n    var k;\r\n    var _i;\r\n    var _ij;\r\n    //console.log(\"sumprod-arguments\");\r\n    //console.log(arguments);\r\n\r\n    if (!Array.isArray(arguments[0])) {\r\n        result = arguments[0];\r\n    } else {\r\n        for (var i = 0; i < arguments[0].length; i++) {\r\n            if (!(arguments[0][i] instanceof Array)) {\r\n                product = 1;\r\n                for (k = 1; k < arrays; k++) {\r\n                    _i = parseNumber(arguments[k - 1][i]);\r\n\r\n                    product *= _i;\r\n                }\r\n                result += product;\r\n            } else {\r\n                for (var j = 0; j < arguments[0][i].length; j++) {\r\n                    product = 1;\r\n                    for (k = 1; k < arrays; k++) {\r\n                        _ij = parseNumber(arguments[k - 1][i][j]);\r\n\r\n                        product *= _ij;\r\n                    }\r\n                    result += product;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    //console.log(result);\r\n    return result;\r\n}\r\n\r\nfunction match_less_than_or_equal(matrix, lookupValue) {\r\n    var index;\r\n    var indexValue;\r\n    for (var idx = 0; idx < matrix.length; idx++) {\r\n        if (matrix[idx] === lookupValue) {\r\n            return idx + 1;\r\n        } else if (matrix[idx] < lookupValue) {\r\n            if (!indexValue) {\r\n                index = idx + 1;\r\n                indexValue = matrix[idx];\r\n            } else if (matrix[idx] > indexValue) {\r\n                index = idx + 1;\r\n                indexValue = matrix[idx];\r\n            }\r\n        }\r\n    }\r\n    if (!index) {\r\n        throw Error('#N/A');\r\n    }\r\n    return index;\r\n}\r\n\r\nfunction match_exactly_string(matrix, lookupValue) {\r\n    for (var idx = 0; idx < matrix.length; idx++) {\r\n        lookupValue = lookupValue.replace(/\\?/g, '.');\r\n        if (Array.isArray(matrix[idx])) {\r\n            if (matrix[idx].length === 1\r\n                && typeof matrix[idx][0] === 'string') {\r\n                    if (matrix[idx][0].toLowerCase() === lookupValue.toLowerCase()) {\r\n                        return idx + 1;\r\n                    }\r\n                }\r\n        } else if (typeof matrix[idx] === 'string') {\r\n            if (matrix[idx].toLowerCase() === lookupValue.toLowerCase()) {\r\n                return idx + 1;\r\n            }\r\n        }\r\n\r\n    }\r\n    throw Error('#N/A');\r\n}\r\n\r\nfunction match_exactly_non_string(matrix, lookupValue) {\r\n    for (var idx = 0; idx < matrix.length; idx++) {\r\n        if (Array.isArray(matrix[idx])) {\r\n            if (matrix[idx].length === 1) {\r\n                if (matrix[idx][0] === lookupValue) {\r\n                    return idx + 1;\r\n                }\r\n            }\r\n        } else if (matrix[idx] === lookupValue) {\r\n            return idx + 1;\r\n        }\r\n    }\r\n    throw Error('#N/A');\r\n}\r\n\r\n// +---------------------+\r\n// | THE IMPLEMENTATIONS |\r\n// +---------------------+\r\n\r\n\r\nfunction match_greater_than_or_equal(matrix, lookupValue) {\r\n    var index;\r\n    var indexValue;\r\n    for (var idx = 0; idx < matrix.length; idx++) {\r\n        if (Array.isArray(matrix[idx]) && matrix[idx].length > 0) {\r\n            // For array in column\r\n            if (matrix[idx][0] === lookupValue) {\r\n                return idx + 1;\r\n            } else if (matrix[idx][0] > lookupValue) {\r\n                if (!indexValue) {\r\n                    index = idx + 1;\r\n                    indexValue = matrix[idx][0];\r\n                } else if (matrix[idx][0] < indexValue) {\r\n                    index = idx + 1;\r\n                    indexValue = matrix[idx][0];\r\n                }\r\n            }\r\n        } else {\r\n            // For array in row\r\n            if (matrix[idx] === lookupValue) {\r\n                return idx + 1;\r\n            } else if (matrix[idx] > lookupValue) {\r\n                if (!indexValue) {\r\n                    index = idx + 1;\r\n                    indexValue = matrix[idx];\r\n                } else if (matrix[idx] < indexValue) {\r\n                    index = idx + 1;\r\n                    indexValue = matrix[idx];\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if (!index) {\r\n        throw Error('#N/A');\r\n    }\r\n    return index;\r\n}\r\n\r\nfunction match(lookupValue, matrix, matchType) {\r\n    if (Array.isArray(matrix)\r\n        && matrix.length === 1\r\n        && Array.isArray(matrix[0])) {\r\n        matrix = matrix[0];\r\n    }\r\n    if (!lookupValue && !matrix) {\r\n        throw Error('#N/A');\r\n    }\r\n    if (arguments.length === 2) {\r\n        matchType = 1;\r\n    }\r\n    if (!(matrix instanceof Array)) {\r\n        throw Error('#N/A');\r\n    }\r\n    if (matchType === 0) {\r\n        if (typeof lookupValue === 'string') {\r\n            return match_exactly_string(matrix, lookupValue);\r\n        } else {\r\n            return match_exactly_non_string(matrix, lookupValue);\r\n        }\r\n    } else if (matchType === 1) {\r\n        return match_less_than_or_equal(matrix, lookupValue);\r\n    } else if (matchType === -1) {\r\n        return match_greater_than_or_equal(matrix, lookupValue);\r\n    } else {\r\n        throw Error('#N/A');\r\n    }\r\n}\r\n\r\nfunction index(matrix, row_num, column_num) {\r\n    if (row_num <= matrix.length) {\r\n        var row = matrix[row_num - 1];\r\n        if (Array.isArray(row)) {\r\n            if (!column_num) {\r\n                return row;\r\n            } else if (column_num <= row.length) {\r\n                return row[column_num - 1];\r\n            }\r\n        } else {\r\n            return matrix[row_num];\r\n        }\r\n    }\r\n    throw Error('#REF!');\r\n}\r\n\r\n// impl ported from https://github.com/FormulaPages/hlookup\r\nfunction hlookup(needle, table, index, exactmatch) {\r\n    if (typeof needle === \"undefined\" || (0, is_blank)(needle)) {\r\n        throw Error('#N/A');\r\n    }\r\n\r\n    index = index || 0;\r\n    let row = table[0], i, searchingFor;\r\n\r\n    if (typeof needle === 'string') {\r\n        searchingFor = needle.toLowerCase();\r\n        for (i = 0; i < row.length; i++) {\r\n            if (exactmatch && row[i] === searchingFor || row[i].toLowerCase().indexOf(searchingFor) !== -1) {\r\n                return index < table.length + 1 ? table[index - 1][i] : table[0][i];\r\n            }\r\n        }\r\n    } else {\r\n        searchingFor = needle;\r\n        for (i = 0; i < row.length; i++) {\r\n            if (exactmatch && row[i] === searchingFor || row[i] === searchingFor) {\r\n                return index < table.length + 1 ? table[index - 1][i] : table[0][i];\r\n            }\r\n        }\r\n    }\r\n    throw Error('#N/A');\r\n}\r\n\r\nfunction len(a) {\r\n    return ('' + a).length;\r\n}\r\n\r\nfunction trim(a) {\r\n    return ('' + a).trim();\r\n}\r\n\r\nfunction is_blank(a) {\r\n    // console.log(a)\r\n    return !a;\r\n}\r\n\r\nfunction covariance_p(a, b) {\r\n    a = getArrayOfNumbers(a);\r\n    b = getArrayOfNumbers(b);\r\n    if (a.length != b.length) {\r\n        return 'N/D';\r\n    }\r\n    var inv_n = 1.0 / a.length;\r\n    var avg_a = sum.apply(this, a) / a.length;\r\n    var avg_b = sum.apply(this, b) / b.length;\r\n    var s = 0.0;\r\n    for (var i = 0; i < a.length; i++) {\r\n        s += (a[i] - avg_a) * (b[i] - avg_b);\r\n    }\r\n    return s * inv_n;\r\n}\r\n\r\nfunction getArrayOfNumbers(range) {\r\n    var arr = [];\r\n    for (var i = 0; i < range.length; i++) {\r\n        var arg = range[i];\r\n        if (Array.isArray(arg)) {\r\n            var matrix = arg;\r\n            for (var j = matrix.length; j--;) {\r\n                if (typeof(matrix[j]) == 'number') {\r\n                    arr.push(matrix[j]);\r\n                }\r\n                else if (Array.isArray(matrix[j])) {\r\n                    for (var k = matrix[j].length; k--;) {\r\n                        if (typeof(matrix[j][k]) == 'number') {\r\n                            arr.push(matrix[j][k]);\r\n                        }\r\n                    }\r\n                }\r\n                // else {\r\n                //   wtf is that?\r\n                // }\r\n            }\r\n        }\r\n        else {\r\n            if (typeof(arg) == 'number') {\r\n                arr.push(arg);\r\n            }\r\n        }\r\n    }\r\n    return arr;\r\n}\r\n\r\nfunction var_p() {\r\n    var average = avg.apply(this, arguments);\r\n    var s = 0.0;\r\n    var c = 0;\r\n    for (var i = 0; i < arguments.length; i++) {\r\n        var arg = arguments[i];\r\n        if (Array.isArray(arg)) {\r\n            var matrix = arg;\r\n            for (var j = matrix.length; j--;) {\r\n                for (var k = matrix[j].length; k--;) {\r\n                    if (matrix[j][k] !== null && matrix[j][k] !== undefined) {\r\n                        s += Math.pow(matrix[j][k] - average, 2);\r\n                        c++;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            s += Math.pow(arg - average, 2);\r\n            c++;\r\n        }\r\n    }\r\n    return s / c;\r\n}\r\n\r\nfunction EXP(n) {\r\n    return Math.pow(Math.E, n);\r\n}\r\n\r\nfunction avg() {\r\n    let allValues = arguments[0][0]\r\n    let sum = 0;\r\n    let count = 0;\r\n\r\n    for (let i = 0; i < allValues.length; i++) {\r\n        if (allValues[i] !== null && allValues[i] !== \"\") {\r\n            sum += Number(allValues[i]);\r\n            count++;\r\n        }\r\n    }\r\n    return count === 0 ? 0 : sum / count;\r\n}\r\n\r\nfunction stDeviation() {\r\n    var array = getArrayOfNumbers(arguments);\r\n\r\n    function _mean(array) {\r\n        return array.reduce(function(a, b) {\r\n            return a + b;\r\n        }) / array.length;\r\n    }\r\n    var mean = _mean(array),\r\n        dev = array.map(function(itm) {\r\n            return (itm - mean) * (itm - mean);\r\n        });\r\n    return Math.sqrt(dev.reduce(function(a, b) {\r\n        return a + b;\r\n    }) / (array.length - 1));\r\n}\r\n\r\n/// Original C++ implementation found at http://www.wilmott.com/messageview.cfm?catid=10&threadid=38771\r\n/// C# implementation found at http://weblogs.asp.net/esanchez/archive/2010/07/29/a-quick-and-dirty-implementation-of-excel-norminv-function-in-c.aspx\r\n/*\r\n *     Compute the quantile function for the normal distribution.\r\n *\r\n *     For small to moderate probabilities, algorithm referenced\r\n *     below is used to obtain an initial approximation which is\r\n *     polished with a final Newton step.\r\n *\r\n *     For very large arguments, an algorithm of Wichura is used.\r\n *\r\n *  REFERENCE\r\n *\r\n *     Beasley, J. D. and S. G. Springer (1977).\r\n *     Algorithm AS 111: The percentage points of the normal distribution,\r\n *     Applied Statistics, 26, 118-121.\r\n *\r\n *      Wichura, M.J. (1988).\r\n *      Algorithm AS 241: The Percentage Points of the Normal Distribution.\r\n *      Applied Statistics, 37, 477-484.\r\n */\r\nfunction normsInv(p, mu, sigma) {\r\n    if (p < 0 || p > 1) {\r\n        throw \"The probality p must be bigger than 0 and smaller than 1\";\r\n    }\r\n    if (sigma < 0) {\r\n        throw \"The standard deviation sigma must be positive\";\r\n    }\r\n\r\n    if (p == 0) {\r\n        return -Infinity;\r\n    }\r\n    if (p == 1) {\r\n        return Infinity;\r\n    }\r\n    if (sigma == 0) {\r\n        return mu;\r\n    }\r\n\r\n    var q, r, val;\r\n\r\n    q = p - 0.5;\r\n\r\n    /*-- use AS 241 --- */\r\n    /* double ppnd16_(double *p, long *ifault)*/\r\n    /*      ALGORITHM AS241  APPL. STATIST. (1988) VOL. 37, NO. 3\r\n            Produces the normal deviate Z corresponding to a given lower\r\n            tail area of P; Z is accurate to about 1 part in 10**16.\r\n    */\r\n    if (Math.abs(q) <= .425) { /* 0.075 <= p <= 0.925 */\r\n        r = .180625 - q * q;\r\n        val =\r\n            q * (((((((r * 2509.0809287301226727 +\r\n                            33430.575583588128105) * r + 67265.770927008700853) * r +\r\n                        45921.953931549871457) * r + 13731.693765509461125) * r +\r\n                    1971.5909503065514427) * r + 133.14166789178437745) * r +\r\n                3.387132872796366608) / (((((((r * 5226.495278852854561 +\r\n                        28729.085735721942674) * r + 39307.89580009271061) * r +\r\n                    21213.794301586595867) * r + 5394.1960214247511077) * r +\r\n                687.1870074920579083) * r + 42.313330701600911252) * r + 1);\r\n    }\r\n    else { /* closer than 0.075 from {0,1} boundary */\r\n\r\n        /* r = min(p, 1-p) < 0.075 */\r\n        if (q > 0)\r\n            r = 1 - p;\r\n        else\r\n            r = p;\r\n\r\n        r = Math.sqrt(-Math.log(r));\r\n        /* r = sqrt(-log(r))  <==>  min(p, 1-p) = exp( - r^2 ) */\r\n\r\n        if (r <= 5) { /* <==> min(p,1-p) >= exp(-25) ~= 1.3888e-11 */\r\n            r += -1.6;\r\n            val = (((((((r * 7.7454501427834140764e-4 +\r\n                                .0227238449892691845833) * r + .24178072517745061177) *\r\n                            r + 1.27045825245236838258) * r +\r\n                        3.64784832476320460504) * r + 5.7694972214606914055) *\r\n                    r + 4.6303378461565452959) * r +\r\n                1.42343711074968357734) / (((((((r *\r\n                                1.05075007164441684324e-9 + 5.475938084995344946e-4) *\r\n                            r + .0151986665636164571966) * r +\r\n                        .14810397642748007459) * r + .68976733498510000455) *\r\n                    r + 1.6763848301838038494) * r +\r\n                2.05319162663775882187) * r + 1);\r\n        }\r\n        else { /* very close to  0 or 1 */\r\n            r += -5;\r\n            val = (((((((r * 2.01033439929228813265e-7 +\r\n                                2.71155556874348757815e-5) * r +\r\n                            .0012426609473880784386) * r + .026532189526576123093) *\r\n                        r + .29656057182850489123) * r +\r\n                    1.7848265399172913358) * r + 5.4637849111641143699) *\r\n                r + 6.6579046435011037772) / (((((((r *\r\n                            2.04426310338993978564e-15 + 1.4215117583164458887e-7) *\r\n                        r + 1.8463183175100546818e-5) * r +\r\n                    7.868691311456132591e-4) * r + .0148753612908506148525) * r + .13692988092273580531) * r +\r\n                .59983220655588793769) * r + 1);\r\n        }\r\n\r\n        if (q < 0.0) {\r\n            val = -val;\r\n        }\r\n    }\r\n\r\n    return mu + sigma * val;\r\n}\r\n\r\nfunction irr(range, guess) {\r\n    var min = -2.0;\r\n    var max = 1.0;\r\n    var n = 0;\r\n    do {\r\n        var guest = (min + max) / 2;\r\n        var NPV = 0;\r\n        for (var i = 0; i < range.length; i++) {\r\n            var arg = range[i];\r\n            NPV += arg[0] / Math.pow((1 + guest), i);\r\n        }\r\n        if (NPV > 0) {\r\n            if (min === max) {\r\n                max += Math.abs(guest);\r\n            }\r\n            min = guest;\r\n        }\r\n        else {\r\n            max = guest;\r\n        }\r\n        n++;\r\n    } while (Math.abs(NPV) > 0.000001 && n < 100000);\r\n    //console.log(n);\r\n    return guest;\r\n}\r\n\r\nfunction counta() {\r\n    var r = 0;\r\n    for (var i = arguments.length; i--;) {\r\n        var arg = arguments[i];\r\n        if (Array.isArray(arg)) {\r\n            var matrix = arg;\r\n            for (var j = matrix.length; j--;) {\r\n                for (var k = matrix[j].length; k--;) {\r\n                    if (matrix[j][k] !== null && matrix[j][k] !== undefined) {\r\n                        r++;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            if (arg !== null && arg !== undefined) {\r\n                r++;\r\n            }\r\n        }\r\n    }\r\n    return r;\r\n}\r\n\r\nfunction pmt(rate_per_period, number_of_payments, present_value, future_value, type) {\r\n    type = type || 0;\r\n    future_value = future_value || 0;\r\n    if (rate_per_period != 0.0) {\r\n        // Interest rate exists\r\n        var q = Math.pow(1 + rate_per_period, number_of_payments);\r\n        return -(rate_per_period * (future_value + (q * present_value))) / ((-1 + q) * (1 + rate_per_period * (type)));\r\n\r\n    }\r\n    else if (number_of_payments != 0.0) {\r\n        // No interest rate, but number of payments exists\r\n        return -(future_value + present_value) / number_of_payments;\r\n    }\r\n    return 0;\r\n}\r\n\r\nfunction concatenate() {\r\n    var r = '';\r\n    for (var i = 0; i < arguments.length; i++) {\r\n        var arg = arguments[i];\r\n        if (arg === null || arg === undefined) continue;\r\n        r += arg;\r\n    }\r\n    return r;\r\n}\r\n\r\nfunction sum() {\r\n    //if(arguments[0][0].length == 241) {\r\n        //console.log(arguments[0]);\r\n   // }\r\n\r\n    var r = 0;\r\n    for (var i = arguments.length; i--;) {\r\n        var arg = arguments[i];\r\n        if (Array.isArray(arg)) {\r\n            var matrix = arg;\r\n            for (var j = matrix.length; j--;) {\r\n                for (var k = matrix[j].length; k--;) {\r\n                    if (!isNaN(matrix[j][k])) {\r\n                        r += +matrix[j][k];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            r += +arg;\r\n        }\r\n    }\r\n    return r;\r\n}\r\n\r\nfunction max() {\r\n    var max = null;\r\n    for (var i = arguments.length; i--;) {\r\n        var arg = arguments[i];\r\n        if (Array.isArray(arg)) {\r\n            var arr = arg;\r\n            for (var j = arr.length; j--;) {\r\n                var col = arr[j];\r\n                if (Array.isArray(col)) {\r\n                    for (var k = col.length; k--;) {\r\n                        if (max == null || (col[k] != null && max < col[k])) {\r\n                            max = col[k];\r\n                        }\r\n                    }\r\n                }\r\n                else if (max == null || (col != null && max < col)) {\r\n                    max = col;\r\n                }\r\n            }\r\n        }\r\n        else if (!isNaN(arg) && (max == null || (arg != null && max < arg))) {\r\n            max = arg;\r\n        }\r\n    }\r\n    return max;\r\n}\r\n\r\nfunction min() {\r\n    var min = null;\r\n    for (var i = arguments.length; i--;) {\r\n        var arg = arguments[i];\r\n        if (Array.isArray(arg)) {\r\n            var arr = arg;\r\n            for (var j = arr.length; j--;) {\r\n                var col = arr[j];\r\n                if (Array.isArray(col)) {\r\n                    for (var k = col.length; k--;) {\r\n                        if (min == null || (col[k] != null && min > col[k])) {\r\n                            min = col[k];\r\n                        }\r\n                    }\r\n                }\r\n                else if (min == null || (col != null && min > col)) {\r\n                    min = col;\r\n                }\r\n            }\r\n        }\r\n        else if (!isNaN(arg) && (min == null || (arg != null && min > arg))) {\r\n            min = arg;\r\n        }\r\n    }\r\n    return min;\r\n}\r\n\r\nfunction vlookup(key, matrix, return_index, range_lookup=true) {\r\n    var val = null;\r\n    for (var i = 0; i < matrix.length; i++) {\r\n        if (matrix[i][0] < key) {\r\n            val = matrix[i][return_index - 1];\r\n        }\r\n        else if (matrix[i][0] == key) {\r\n            return matrix[i][return_index - 1];\r\n        }\r\n    }\r\n    if (range_lookup && val) {\r\n        return val;\r\n    }\r\n    throw Error('#N/A');\r\n}\r\n\r\nfunction iserror() {\r\n    // if an error is catched before getting there, true will be returned from the catch block\r\n    // if we get here then it's not an error\r\n    return false;\r\n}\r\n\r\nfunction time(hours, minutes, seconds) {\r\n    const MS_PER_DAY = 24 * 60 * 60 * 1000;\r\n    return ((hours * 60 + minutes) * 60 + seconds) * 1000 / MS_PER_DAY;\r\n}\r\n\r\nfunction day(date) {\r\n    if (!date.getDate) {\r\n        throw Error('#VALUE!');\r\n    }\r\n    var day = date.getDate();\r\n    if (isNaN(day)) {\r\n        throw Error('#VALUE!');\r\n    }\r\n    return day;\r\n}\r\n\r\nfunction month(date) {\r\n    if (!date.getMonth) {\r\n        throw Error('#VALUE!');\r\n    }\r\n    var month = date.getMonth();\r\n    if (isNaN(month)) {\r\n        throw Error('#VALUE!');\r\n    }\r\n    return month + 1;\r\n}\r\n\r\nfunction year(date) {\r\n    if (!date.getFullYear) {\r\n        throw Error('#VALUE!');\r\n    }\r\n    var year = date.getFullYear();\r\n    if (isNaN(year)) {\r\n        throw Error('#VALUE!');\r\n    }\r\n    return year;\r\n}\r\n\r\nfunction right(text, number) {\r\n    number = (number === undefined) ? 1 : parseFloat(number);\r\n\r\n    if (isNaN(number)) {\r\n        throw Error('#VALUE!');\r\n    }\r\n    if (text === undefined || text === null) {\r\n        text = '';\r\n    } else {\r\n        text = '' + text;\r\n    }\r\n    return text.substring(text.length - number);\r\n}\r\n\r\nfunction left(text, number) {\r\n    number = (number === undefined) ? 1 : parseFloat(number);\r\n\r\n    if (isNaN(number)) {\r\n        throw Error('#VALUE!');\r\n    }\r\n    if (text === undefined || text === null) {\r\n        text = '';\r\n    } else {\r\n        text = '' + text;\r\n    }\r\n    return text.substring(0, number);\r\n}\r\n\r\nfunction ifs(/*_cond1, _val1, _cond2, _val2, _cond3, _val3, ... */) {\r\n    for (var i = 0; i + 1 < arguments.length; i+=2) {\r\n        var cond = arguments[i];\r\n        var val = arguments[i+1];\r\n        if (cond) {\r\n            return val;\r\n        }\r\n    }\r\n    throw Error('#N/A');\r\n}\r\n\r\nfunction escapeRegExp(str) {\r\n    return str.replace(/([.*+?^=!:${}()|\\[\\]\\/\\\\])/g, \"\\\\$1\");\r\n}\r\n\r\nfunction substitute(text, old_text, new_text, occurrence) {\r\n    if(occurrence <= 0) {\r\n      throw Error('#VALUE!');\r\n    }\r\n    if (!text || !old_text || (!new_text && new_text !== '')) {\r\n      return text;\r\n    } else if (occurrence === undefined) {\r\n      return text.replace(new RegExp(escapeRegExp(old_text), 'g'), new_text);\r\n    } else {\r\n      var index = 0;\r\n      var i = 0;\r\n      while (text.indexOf(old_text, index) > 0) {\r\n        index = text.indexOf(old_text, index + 1);\r\n        i++;\r\n        if (i === occurrence) {\r\n          return text.substring(0, index) + new_text + text.substring(index + old_text.length);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\nfunction ceiling(number, significance) {\r\n    return Math.ceil(number / significance) * significance\r\n}\r\n\r\nmodule.exports = formulas;\r\n","\"use strict\";\r\n\r\nmodule.exports = function getSanitizedSheetName(sheet_name) {\r\n    var quotedMatch = sheet_name.match(/^'(.*)'$/);\r\n    if (quotedMatch) {\r\n        return quotedMatch[1];\r\n    }\r\n    else {\r\n        return sheet_name;\r\n    }\r\n};\r\n","\"use strict\";\r\n\r\nconst int_2_col_str = require('./int_2_col_str.js');\r\nconst col_str_2_int = require('./col_str_2_int.js');\r\nconst exec_formula = require('./exec_formula.js');\r\nconst find_all_cells_with_formulas = require('./find_all_cells_with_formulas.js');\r\nconst Calculator = require('./Calculator.js');\r\n\r\nvar mymodule = function(workbook, options) {\r\n    var formulas = find_all_cells_with_formulas(workbook, exec_formula);\r\n    const uniqueErrorMessages = new Set();\r\n\r\n    for (var i = formulas.length - 1; i >= 0; i--) {\r\n      try {\r\n         // console.log(formulas[i].name);\r\n        exec_formula(formulas[i]);\r\n      } catch (error) {\r\n        if (!options || !options.continue_after_error) {\r\n          throw error\r\n        }\r\n        if (options.log_error) {\r\n            const parts = error.message.split(':');\r\n            const functionError = parts[parts.length - 1].trim();\r\n            let errorMessage = \"\";\r\n            if (functionError.includes(\"Function\")){\r\n                 errorMessage = `Error: ${functionError}`; //Sheet: ${formulas[i].sheet_name},\r\n            } else {\r\n                 errorMessage = `Error: ${functionError} - Sheet: ${formulas[i].sheet_name} - Cell ${formulas[i].name}`;\r\n            }\r\n\r\n            // If the error message is not in the uniqueErrorMessages Set, add it\r\n            if (!uniqueErrorMessages.has(errorMessage)) {\r\n                uniqueErrorMessages.add(errorMessage);\r\n            }\r\n           //console.log('error executing formula', 'sheet', formulas[i].sheet_name, 'cell', formulas[i].name, error.message)\r\n        }\r\n      }\r\n    }\r\n    if (uniqueErrorMessages.size > 0) {\r\n        console.log('Unique errors executing formulas:');\r\n        for (const errorMessage of uniqueErrorMessages) {\r\n            console.log(errorMessage);\r\n        }\r\n    }\r\n};\r\n\r\nmymodule.calculator = function calculator(workbook) {\r\n    return new Calculator(workbook, exec_formula);\r\n};\r\n\r\nmymodule.set_fx = exec_formula.set_fx;\r\nmymodule.exec_fx = exec_formula.exec_fx;\r\nmymodule.col_str_2_int = col_str_2_int;\r\nmymodule.int_2_col_str = int_2_col_str;\r\nmymodule.import_functions = exec_formula.import_functions;\r\nmymodule.import_raw_functions = exec_formula.import_raw_functions;\r\nmymodule.xlsx_Fx = exec_formula.xlsx_Fx;\r\nmymodule.localizeFunctions = exec_formula.localizeFunctions;\r\n\r\nmymodule.XLSX_CALC = mymodule\r\n\r\nmodule.exports = mymodule;\r\n","\"use strict\";\r\n\r\nmodule.exports = function int_2_col_str(n) {\r\n    var dividend = n + 1;\r\n    var columnName = '';\r\n    var modulo;\r\n    var guard = 10;\r\n    while (dividend > 0 && guard--) {\r\n        modulo = (dividend - 1) % 26;\r\n        columnName = String.fromCharCode(modulo + 65) + columnName;\r\n        dividend = (dividend - modulo - 1) / 26;\r\n    }\r\n    return columnName;\r\n};","const RawValue = require('./RawValue.js');\r\nconst RefValue = require('./RefValue.js');\r\nconst LazyValue = require('./LazyValue.js');\r\nconst Range = require('./Range.js');\r\n\r\n// this is used to _cache_ range names so that it doesn't need to be queried\r\n// every time a range is used\r\nlet definedNames, wb;\r\nfunction getDefinedName(buffer, formula) {\r\n    if (!(formula.wb.Workbook && formula.wb.Workbook.Names)) {\r\n        return null;\r\n    }\r\n    if (wb !== formula.wb) {\r\n        wb = formula.wb;\r\n        definedNames = null;\r\n        return getDefinedName(buffer, formula);\r\n    }\r\n    if (definedNames) {\r\n        return definedNames[buffer];\r\n    }\r\n    const keys = Object.values(formula.wb.Workbook.Names);\r\n    if (keys.length === 0) {\r\n        return;\r\n    }\r\n    definedNames = {};\r\n    keys.forEach(({ Name, Ref }) => {\r\n        if (!Name.includes('.')) {\r\n            definedNames[Name] = Ref;\r\n        }\r\n    });\r\n\r\n    return getDefinedName(buffer, formula);\r\n}\r\n\r\nmodule.exports = function str_2_val(buffer, formula) {\r\n    if (!isNaN(buffer)) {\r\n        return new RawValue(+buffer);\r\n    }\r\n    if (buffer === 'TRUE') {\r\n        return new RawValue(1);\r\n    }\r\n    if (typeof buffer !== 'string') {\r\n        return buffer;\r\n    }\r\n\r\n    buffer = buffer.trim().replace(/\\$/g, '')\r\n\r\n    if (buffer.match(/^[A-Z]+[0-9]+:[A-Z]+[0-9]+$/)) {\r\n        return new Range(buffer, formula);\r\n    }\r\n    if (buffer.match(/^[^!]+![A-Z]+[0-9]+:[A-Z]+[0-9]+$/)) {\r\n        return new Range(buffer, formula);\r\n    }\r\n    if (buffer.match(/^[A-Z]+:[A-Z]+$/)) {\r\n        return new Range(buffer, formula);\r\n    }\r\n    if (buffer.match(/^[^!]+![A-Z]+:[A-Z]+$/)) {\r\n        return new Range(buffer, formula);\r\n    }\r\n    if (buffer.match(/^[A-Z]+[0-9]+$/)) {\r\n        return new RefValue(buffer, formula);\r\n    }\r\n    if (buffer.match(/^[^!]+![A-Z]+[0-9]+$/)) {\r\n        return new RefValue(buffer, formula);\r\n    }\r\n    if (buffer.match(/%$/)) {\r\n        var inner = str_2_val(buffer.substr(0, buffer.length-1), formula)\r\n        return new LazyValue(() => inner.calc() / 100)\r\n    }\r\n    if (getDefinedName(buffer, formula)) {\r\n        return str_2_val(getDefinedName(buffer, formula), formula);\r\n    }\r\n    return buffer;\r\n};\r\n","const error = require('./error.js');\r\n\r\n// Arrays\r\nfunction argsToArray(args) {\r\n  const result = []\r\n\r\n  arrayEach(args, (value) => {\r\n    result.push(value)\r\n  })\r\n\r\n  return result\r\n}\r\n\r\nfunction arrayEach(array, iteratee) {\r\n  let index = -1\r\n  const length = array.length\r\n\r\n  while (++index < length) {\r\n    if (iteratee(array[index], index, array) === false) {\r\n      break\r\n    }\r\n  }\r\n\r\n  return array\r\n}\r\n\r\nfunction arrayValuesToNumbers(arr) {\r\n  let n = arr.length\r\n  let el\r\n\r\n  while (n--) {\r\n    el = arr[n]\r\n\r\n    if (typeof el === 'number') {\r\n      continue\r\n    }\r\n\r\n    if (el === true) {\r\n      arr[n] = 1\r\n      continue\r\n    }\r\n\r\n    if (el === false) {\r\n      arr[n] = 0\r\n      continue\r\n    }\r\n\r\n    if (typeof el === 'string') {\r\n      const number = parseNumber(el)\r\n\r\n      arr[n] = number instanceof Error ? 0 : number\r\n    }\r\n  }\r\n\r\n  return arr\r\n}\r\n\r\nfunction fillMatrix(matrix, fill_value) {\r\n  if (!matrix) {\r\n    return error.value\r\n  }\r\n\r\n  if (!matrix.every((el) => Array.isArray(el)) || matrix.length === 0) {\r\n    matrix = [[...matrix]]\r\n  }\r\n\r\n  matrix.map((arr, i) => {\r\n    arr.map((a, j) => {\r\n      if (!a) {\r\n        matrix[i][j] = 0\r\n      }\r\n    })\r\n  })\r\n\r\n  const longestArrayIndex = matrix.reduce((acc, arr, i) => (arr.length > matrix[acc].length ? i : acc), 0)\r\n  const longestArrayLength = matrix[longestArrayIndex].length\r\n\r\n  return matrix.map((el) => [...el, ...Array(longestArrayLength - el.length).fill(fill_value ? fill_value : 0)])\r\n}\r\n\r\nfunction flatten() {\r\n  let result\r\n\r\n  if (arguments.length === 1) {\r\n    const argument = arguments[0]\r\n    result = isArrayLike(argument) ? argsToArray.apply(null, arguments) : [argument]\r\n  } else {\r\n    result = Array.from(arguments)\r\n  }\r\n\r\n  while (!isFlat(result)) {\r\n    result = flattenShallow(result)\r\n  }\r\n\r\n  return result\r\n}\r\n\r\nfunction flattenShallow(array) {\r\n  if (!array || !array.reduce) {\r\n    return [array]\r\n  }\r\n\r\n  return array.reduce((a, b) => {\r\n    const aIsArray = Array.isArray(a)\r\n    const bIsArray = Array.isArray(b)\r\n\r\n    if (aIsArray && bIsArray) {\r\n      return a.concat(b)\r\n    }\r\n\r\n    if (aIsArray) {\r\n      a.push(b)\r\n\r\n      return a\r\n    }\r\n\r\n    if (bIsArray) {\r\n      return [a].concat(b)\r\n    }\r\n\r\n    return [a, b]\r\n  })\r\n}\r\n\r\nfunction initial(array, idx) {\r\n  idx = idx || 1\r\n\r\n  if (!array || typeof array.slice !== 'function') {\r\n    return array\r\n  }\r\n\r\n  return array.slice(0, array.length - idx)\r\n}\r\n\r\nfunction isArrayLike(a) {\r\n  return a != null && typeof a.length === 'number' && typeof a !== 'string'\r\n}\r\n\r\nfunction isFlat(array) {\r\n  if (!array) {\r\n    return false\r\n  }\r\n\r\n  for (let i = 0; i < array.length; ++i) {\r\n    if (Array.isArray(array[i])) {\r\n      return false\r\n    }\r\n  }\r\n\r\n  return true\r\n}\r\n\r\nfunction rest(array, idx) {\r\n  idx = idx || 1\r\n\r\n  if (!array || typeof array.slice !== 'function') {\r\n    return array\r\n  }\r\n\r\n  return array.slice(idx)\r\n}\r\n\r\nfunction transpose(matrix) {\r\n  if (!matrix) {\r\n    return error.value\r\n  }\r\n\r\n  return matrix[0].map((col, i) => matrix.map((row) => row[i]))\r\n}\r\n\r\n// Databases\r\nfunction findField(database, title) {\r\n  let index = null\r\n\r\n  arrayEach(database, (value, i) => {\r\n    if (value[0] === title) {\r\n      index = i\r\n\r\n      return false\r\n    }\r\n  })\r\n\r\n  // Return error if the input field title is incorrect\r\n  if (index == null) {\r\n    return error.value\r\n  }\r\n\r\n  return index\r\n}\r\n\r\n// Errors\r\nfunction anyError() {\r\n  for (let n = 0; n < arguments.length; n++) {\r\n    if (arguments[n] instanceof Error) {\r\n      return arguments[n]\r\n    }\r\n  }\r\n\r\n  return undefined\r\n}\r\n\r\nfunction anyIsError() {\r\n  let n = arguments.length\r\n\r\n  while (n--) {\r\n    if (arguments[n] instanceof Error) {\r\n      return true\r\n    }\r\n  }\r\n\r\n  return false\r\n}\r\n\r\n// Numbers\r\nfunction cleanFloat(number) {\r\n  const power = 1e14\r\n\r\n  return Math.round(number * power) / power\r\n}\r\n\r\nfunction numbers() {\r\n  const possibleNumbers = flatten.apply(null, arguments)\r\n\r\n  return possibleNumbers.filter((el) => typeof el === 'number')\r\n}\r\n\r\nfunction serialNumberToDate(serial) {\r\n  if (serial < 60) {\r\n    serial += 1\r\n  }\r\n\r\n  const utc_days = Math.floor(serial - 25569)\r\n  const utc_value = utc_days * 86400\r\n  const date_info = new Date(utc_value * 1000)\r\n  const fractional_day = serial - Math.floor(serial) + 0.0000001\r\n\r\n  let total_seconds = Math.floor(86400 * fractional_day)\r\n\r\n  const seconds = total_seconds % 60\r\n\r\n  total_seconds -= seconds\r\n\r\n  const hours = Math.floor(total_seconds / (60 * 60))\r\n  const minutes = Math.floor(total_seconds / 60) % 60\r\n  let days = date_info.getUTCDate()\r\n  let month = date_info.getUTCMonth()\r\n\r\n  if (serial >= 60 && serial < 61) {\r\n    days = 29\r\n    month = 1\r\n  }\r\n\r\n  return new Date(date_info.getUTCFullYear(), month, days, hours, minutes, seconds)\r\n}\r\n\r\n// Parsers\r\nfunction parseBool(bool) {\r\n  if (typeof bool === 'boolean') {\r\n    return bool\r\n  }\r\n\r\n  if (bool instanceof Error) {\r\n    return bool\r\n  }\r\n\r\n  if (typeof bool === 'number') {\r\n    return bool !== 0\r\n  }\r\n\r\n  if (typeof bool === 'string') {\r\n    const up = bool.toUpperCase()\r\n\r\n    if (up === 'TRUE') {\r\n      return true\r\n    }\r\n\r\n    if (up === 'FALSE') {\r\n      return false\r\n    }\r\n  }\r\n\r\n  if (bool instanceof Date && !isNaN(bool)) {\r\n    return true\r\n  }\r\n\r\n  return error.value\r\n}\r\n\r\nfunction parseDate(date) {\r\n  if (!isNaN(date)) {\r\n    if (date instanceof Date) {\r\n      return new Date(date)\r\n    }\r\n\r\n    const d = parseFloat(date)\r\n\r\n    if (d < 0 || d >= 2958466) {\r\n      return error.num\r\n    }\r\n\r\n    return serialNumberToDate(d)\r\n  }\r\n\r\n  if (typeof date === 'string') {\r\n    date = /(\\d{4})-(\\d\\d?)-(\\d\\d?)$/.test(date) ? new Date(date + ' T00:00:00.000') : new Date(date)\r\n\r\n    if (!isNaN(date)) {\r\n      return date\r\n    }\r\n  }\r\n\r\n  return error.value\r\n}\r\n\r\nfunction parseDateArray(arr) {\r\n  let len = arr.length\r\n  let parsed\r\n\r\n  while (len--) {\r\n    parsed = parseDate(arr[len])\r\n\r\n    if (parsed === error.value) {\r\n      return parsed\r\n    }\r\n\r\n    arr[len] = parsed\r\n  }\r\n\r\n  return arr\r\n}\r\n\r\nfunction parseMatrix(matrix) {\r\n  if (!matrix || (matrix.length && matrix.length === 0)) {\r\n    return error.value\r\n  }\r\n\r\n  let pnarr\r\n\r\n  for (let i = 0; i < matrix.length; i++) {\r\n    pnarr = parseNumberArray(matrix[i])\r\n    matrix[i] = pnarr\r\n\r\n    if (pnarr instanceof Error) {\r\n      return pnarr\r\n    }\r\n  }\r\n\r\n  return matrix\r\n}\r\n\r\nfunction parseNumber(string) {\r\n  if (string instanceof Error) {\r\n    return string\r\n  }\r\n\r\n  if (string === undefined || string === null) {\r\n    return 0\r\n  }\r\n\r\n  if (typeof string === 'boolean') {\r\n    string = +string\r\n  }\r\n\r\n  if (!isNaN(string) && string !== '') {\r\n    return parseFloat(string)\r\n  }\r\n\r\n  return error.value\r\n}\r\n\r\nfunction parseNumberArray(arr) {\r\n  let len\r\n\r\n  if (!arr || (len = arr.length) === 0) {\r\n    return error.value\r\n  }\r\n\r\n  let parsed\r\n\r\n  while (len--) {\r\n    if (arr[len] instanceof Error) {\r\n      return arr[len]\r\n    }\r\n\r\n    parsed = parseNumber(arr[len])\r\n\r\n    if (parsed instanceof Error) {\r\n      return parsed\r\n    }\r\n\r\n    arr[len] = parsed\r\n  }\r\n\r\n  return arr\r\n}\r\n\r\nfunction parseString(string) {\r\n  if (string instanceof Error) {\r\n    return string\r\n  }\r\n\r\n  if (string === undefined || string === null) {\r\n    return ''\r\n  }\r\n\r\n  return string.toString()\r\n}\r\n\r\n// Strings\r\nfunction anyIsString() {\r\n  let n = arguments.length\r\n\r\n  while (n--) {\r\n    if (typeof arguments[n] === 'string') {\r\n      return true\r\n    }\r\n  }\r\n\r\n  return false\r\n}\r\n\r\n// Misc\r\nfunction isDefined(arg) {\r\n  return arg !== undefined && arg !== null\r\n}\r\n\r\nmodule.exports = {\r\n  argsToArray: argsToArray,\r\n  arrayEach: arrayEach,\r\n  arrayValuesToNumbers: arrayValuesToNumbers,\r\n  fillMatrix: fillMatrix,\r\n  flatten: flatten,\r\n  flattenShallow: flattenShallow,\r\n  initial: initial,\r\n  isArrayLike: isArrayLike,\r\n  isFlat: isFlat,\r\n  rest: rest,\r\n  transpose: transpose,\r\n  findField: findField,\r\n  anyError: anyError,\r\n  anyIsError: anyIsError,\r\n  cleanFloat: cleanFloat,\r\n  numbers: numbers,\r\n  serialNumberToDate: serialNumberToDate,\r\n  parseBool: parseBool,\r\n  parseDate: parseDate,\r\n  parseDateArray: parseDateArray,\r\n  parseMatrix: parseMatrix,\r\n  parseNumber: parseNumber,\r\n  parseNumberArray: parseNumberArray,\r\n  parseString: parseString,\r\n  anyIsString: anyIsString,\r\n  isDefined: isDefined\r\n};","const defaultOperator = '='\r\nconst validSymbols = ['>', '>=', '<', '<=', '=', '<>']\r\nconst _TOKEN_TYPE_OPERATOR = 'operator'\r\nconst _TOKEN_TYPE_LITERAL = 'literal'\r\nconst SUPPORTED_TOKENS = [_TOKEN_TYPE_OPERATOR, _TOKEN_TYPE_LITERAL]\r\n\r\nconst TOKEN_TYPE_OPERATOR = _TOKEN_TYPE_OPERATOR\r\nconst TOKEN_TYPE_LITERAL = _TOKEN_TYPE_LITERAL\r\n\r\n/**\r\n * Create token which describe passed symbol/value.\r\n *\r\n * @param {String} value Value/Symbol to describe.\r\n * @param {String} type Type of the token 'operator' or 'literal'.\r\n * @return {Object}\r\n */\r\nfunction createToken(value, type) {\r\n  if (SUPPORTED_TOKENS.indexOf(type) === -1) {\r\n    throw new Error('Unsupported token type: ' + type)\r\n  }\r\n\r\n  return {\r\n    value: value,\r\n    type: type\r\n  }\r\n}\r\n\r\n/**\r\n * Tries to cast numeric values to their type passed as a string.\r\n *\r\n * @param {*} value\r\n * @return {*}\r\n */\r\nfunction castValueToCorrectType(value) {\r\n  if (typeof value !== 'string') {\r\n    return value\r\n  }\r\n\r\n  if (/^\\d+(\\.\\d+)?$/.test(value)) {\r\n    value = value.indexOf('.') === -1 ? parseInt(value, 10) : parseFloat(value)\r\n  }\r\n\r\n  return value\r\n}\r\n\r\n/**\r\n * Generate stream of tokens from passed expression.\r\n *\r\n * @param {String} expression\r\n * @return {String[]}\r\n */\r\nfunction tokenizeExpression(expression) {\r\n  const expressionLength = expression.length\r\n  const tokens = []\r\n  let cursorIndex = 0\r\n  let processedValue = ''\r\n  let processedSymbol = ''\r\n\r\n  while (cursorIndex < expressionLength) {\r\n    const char = expression.charAt(cursorIndex)\r\n\r\n    switch (char) {\r\n      case '>':\r\n      case '<':\r\n      case '=':\r\n        processedSymbol = processedSymbol + char\r\n\r\n        if (processedValue.length > 0) {\r\n          tokens.push(processedValue)\r\n          processedValue = ''\r\n        }\r\n\r\n        break\r\n      default:\r\n        if (processedSymbol.length > 0) {\r\n          tokens.push(processedSymbol)\r\n          processedSymbol = ''\r\n        }\r\n\r\n        processedValue = processedValue + char\r\n        break\r\n    }\r\n\r\n    cursorIndex++\r\n  }\r\n\r\n  if (processedValue.length > 0) {\r\n    tokens.push(processedValue)\r\n  }\r\n\r\n  if (processedSymbol.length > 0) {\r\n    tokens.push(processedSymbol)\r\n  }\r\n\r\n  return tokens\r\n}\r\n\r\n/**\r\n * Analyze and convert tokens to an object which describes their meaning.\r\n *\r\n * @param {String[]} tokens\r\n * @return {Object[]}\r\n */\r\nfunction analyzeTokens(tokens) {\r\n  let literalValue = ''\r\n  const analyzedTokens = []\r\n\r\n  for (let i = 0; i < tokens.length; i++) {\r\n    const token = tokens[i]\r\n\r\n    if (i === 0 && validSymbols.indexOf(token) >= 0) {\r\n      analyzedTokens.push(createToken(token, TOKEN_TYPE_OPERATOR))\r\n    } else {\r\n      literalValue += token\r\n    }\r\n  }\r\n\r\n  if (literalValue.length > 0) {\r\n    analyzedTokens.push(createToken(castValueToCorrectType(literalValue), TOKEN_TYPE_LITERAL))\r\n  }\r\n\r\n  if (analyzedTokens.length > 0 && analyzedTokens[0].type !== TOKEN_TYPE_OPERATOR) {\r\n    analyzedTokens.unshift(createToken(defaultOperator, TOKEN_TYPE_OPERATOR))\r\n  }\r\n\r\n  return analyzedTokens\r\n}\r\n\r\n/**\r\n * Compute/Evaluate an expression passed as an array of tokens.\r\n *\r\n * @param {Object[]} tokens\r\n * @return {Boolean}\r\n */\r\nfunction computeExpression(tokens) {\r\n  const values = []\r\n  let operator\r\n\r\n  for (let i = 0; i < tokens.length; i++) {\r\n    const token = tokens[i]\r\n\r\n    switch (token.type) {\r\n      case TOKEN_TYPE_OPERATOR:\r\n        operator = token.value\r\n        break\r\n      case TOKEN_TYPE_LITERAL:\r\n        values.push(token.value)\r\n        break\r\n    }\r\n  }\r\n\r\n  return evaluate(values, operator)\r\n}\r\n\r\n/**\r\n * Evaluate values based on passed math operator.\r\n *\r\n * @param {*} values\r\n * @param {String} operator\r\n * @return {Boolean}\r\n */\r\nfunction evaluate(values, operator) {\r\n  let result = false\r\n\r\n  switch (operator) {\r\n    case '>':\r\n      result = values[0] > values[1]\r\n      break\r\n    case '>=':\r\n      result = values[0] >= values[1]\r\n      break\r\n    case '<':\r\n      result = values[0] < values[1]\r\n      break\r\n    case '<=':\r\n      result = values[0] <= values[1]\r\n      break\r\n    case '=':\r\n      result = values[0] == values[1]\r\n      break\r\n    case '<>':\r\n      result = values[0] != values[1]\r\n      break\r\n  }\r\n\r\n  return result\r\n}\r\n\r\nfunction parse(expression) {\r\n  return analyzeTokens(tokenizeExpression(expression))\r\n}\r\n\r\nconst compute = computeExpression\r\n\r\nmodule.exports = {\r\n  TOKEN_TYPE_LITERAL: _TOKEN_TYPE_LITERAL,\r\n  createToken: createToken,\r\n  parse: parse,\r\n  compute: compute\r\n}","const nil = new Error('#NULL!')\r\nconst div0 = new Error('#DIV/0!')\r\nconst value = new Error('#VALUE!')\r\nconst ref = new Error('#REF!')\r\nconst name = new Error('#NAME?')\r\nconst num = new Error('#NUM!')\r\nconst na = new Error('#N/A')\r\nconst error = new Error('#ERROR!')\r\nconst data = new Error('#GETTING_DATA')\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(138);\n"],"names":["root","factory","exports","module","define","amd","a","i","this","RawValue","str_2_val","find_all_cells_with_formulas","constructor","workbook","exec_formula","expressions","variables","formulas","length","exp","build_expression","push","console","log","calcNames","setVar","var_name","value","variable","setValue","forEach","setVarOfExpression","getVars","vars","k","calc","Workbook","Names","item","val","getRef","Ref","Name","ref_name","Error","formula","formula_ref","wb","args","arg","name","execute","update_cell_value","Range","MS_PER_DAY","exp_id","last_arg","self","isEmpty","checkVariable","obj","getCurrentCellIndex","replace","exec","op","fn","r","splice","b","Array","isArray","id","cell","f","includes","v","t","e","errorValues","undefined","message","w","status","concat","Date","parse","exec_minus","Math","pow","getTime","toLowerCase","buffer","col_str_2_int","int_2_col_str","getSanitizedSheetName","str_expression","range_expression","sheet_name","sheet","indexOf","aux","split","Sheets","max_row","arr","min_row","parseInt","str_max_row","min_col","max_col","matrix","row","j","cell_name","cell_full_name","parseRef","resolved_ref","ref_cell","user_function","result","apply","map","col_str","colstr","charCodeAt","expression_builder","xlsx_Fx","xlsx_raw_Fx","import_raw_functions","functions","opts","key","import_functions","formulajs","prefix","override","my_assign","dest","source","JSON","stringify","set_fx","exec_fx","localizeFunctions","dic","newName","oldName","Exp","UserFnExecutor","UserRawFnExecutor","common_operations","root_exp","str_formula","substr","exp_obj","was_string","fn_stack","string","char","state","start","single_quote","stack","o","trim_buffer","trim","special","special_raw","ini_parentheses","pop","add_operation","cells","RefValue","cell_ref","rows","columns","height","width","ref_value","parsed_ref","col","end_range_col","onerrorvalue","isNaN","Infinity","condition","_then","_else","arguments","expressionWithRange","colRow","match","colNumber","rowNumber","matrixRow","destinationColumn","destinationRow","utils","error","evalExpression","formatter","Intl","DateTimeFormat","timeZone","floor","abs","sqrt","return_index","range_lookup","max","sum","min","rate_per_period","number_of_payments","present_value","future_value","type","q","range","guess","n","guest","NPV","normsInv","array","getArrayOfNumbers","mean","reduce","_mean","dev","itm","avg","E","var_p","covariance_p","is_blank","needle","table","index","exactmatch","searchingFor","row_num","column_num","lookupValue","matchType","idx","match_exactly_string","match_exactly_non_string","indexValue","match_less_than_or_equal","match_greater_than_or_equal","parseNumber","parseFloat","matrixArray","getRowCount","getColCount","rowCount","colCount","consistentSizeRanges","product","arrays","x","today","setHours","hours","minutes","seconds","date","getDate","day","getMonth","month","getFullYear","year","text","number","substring","decimalPlaces","round","roundMeasure","inv_n","avg_a","avg_b","s","sa","sb","elementToSum","sumResult","slice","call","elt","toString","argsToArray","parseNumberArray","flatten","shift","criterias","criteriaLength","isMeetCondition","valueToTest","criteria","isWildcard","dateRegex","valueIsDate","test","criteriaIsDate","format","serialNumberToDate","computedResult","tokenizedCriteria","tokens","createToken","TOKEN_TYPE_LITERAL","compute","option","old_text","new_text","occurrence","RegExp","significance","ceil","return_date","start_date","months","parseDate","setMonth","average","c","allValues","count","Number","p","mu","sigma","quotedMatch","Calculator","mymodule","options","uniqueErrorMessages","Set","continue_after_error","log_error","parts","functionError","errorMessage","has","add","size","calculator","XLSX_CALC","modulo","dividend","columnName","guard","String","fromCharCode","LazyValue","definedNames","getDefinedName","keys","Object","values","inner","arrayEach","iteratee","argument","isArrayLike","from","isFlat","flattenShallow","aIsArray","bIsArray","serial","utc_days","date_info","fractional_day","total_seconds","days","getUTCDate","getUTCMonth","getUTCFullYear","d","num","len","parsed","arrayValuesToNumbers","el","fillMatrix","fill_value","every","longestArrayIndex","acc","longestArrayLength","fill","initial","rest","transpose","findField","database","title","anyError","anyIsError","cleanFloat","power","numbers","filter","parseBool","bool","up","toUpperCase","parseDateArray","parseMatrix","pnarr","parseString","anyIsString","isDefined","defaultOperator","validSymbols","_TOKEN_TYPE_OPERATOR","_TOKEN_TYPE_LITERAL","SUPPORTED_TOKENS","TOKEN_TYPE_OPERATOR","expression","literalValue","analyzedTokens","token","unshift","analyzeTokens","expressionLength","cursorIndex","processedValue","processedSymbol","charAt","tokenizeExpression","operator","evaluate","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__"],"sourceRoot":""}